<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <title>@product.name@ - Concepts - </title>
        <link href="../css/bps-docs.css" rel="stylesheet"/>
        <link href="styles/dist-docs.css" rel="stylesheet" type="text/css" media="all"/>
    </head>
    <body>
        <h1>Concepts</h1>
        <h3>Table of Content</h3>
        <ul>
            <li><a href="#process-versioning">Process Versioning</a></li>
            <li><a href="#process-instance-event">Process Instance Events</a></li>
            <li><a href="#Partner-links">Partner links</a></li>
        </ul>
        <p><br /></p>
        <h2 id="process-versioning">Process Versioning</h2>
        <h3 id="Using-Versioning">Versioning</h3>
        <p>
            If a package with existing package name is uploaded, all the processes in the package
            will be versioned.
            In this case, all the old processes in the package will be retired while a new version
            will be be deployed.
            Since there is only package level versioning, the new package should include all the
            processes defined
            in the old package, eventhough you may only need to update a single process in that
            package.
        </p>
        <p><br /></p>
        <!-- Process instance events -->
        <h2 id="process-instance-event">Process Instance Events</h2>

        <h3 id="Using-Events">Events</h3>
        <ul>
            <li>
                <a href="#Events-Event-Types">Event Types</a>
            </li>
            <li>
                <a href="#Events-Filtering-Events">Filtering Events</a>
                <ul>
                    <li>
                        <a href="#Events-Process">Filtering at the process level</a>
                    </li>
                    <li>
                        <a href="#Events-Scope">Filtering at the scope level</a>
                    </li>
                </ul>
            </li>
            <li>
                <a href="#Events-Listeners">Event Listeners</a>
            </li>
        </ul>
        <p>
            @product.name@ generates events to let you track what is exactly happening in the engine and
            produces detailed
            information about process executions. These events are persisted in BPS's database and
            can be queried using
            the
	    <a href="../management_api.html">Management API</a>. The default behaviour for the
            engine is to always
            generate all events for every executed action. However from a performance standpoint it
            is better to
            deactivate some of the events you're not interested in (or even all of them). Inserting
            all these events
            generates a non-negligible overhead.
        </p>
        <br />
        <h3 id="Events-Event-Types">Event Types</h3>
        <p>
            The following table details each event possibly generated by ODE:
            <br />
        </p>
        <table>
            <tbody>
                <tr>
                    <th>Event Name</th>
                    <th>Process/Scope</th>
                    <th>Description</th>
                    <th>Type</th>
                </tr>
                <tr>
                    <td>ActivityEnabledEvent</td>
                    <td>Scope</td>
                    <td>An activity is enabled (just before it's started)</td>
                    <td>activityLifecycle</td>
                </tr>
                <tr>
                    <td>ActivityDisabledEvent</td>
                    <td>Scope</td>
                    <td>An activity is disabled (due to dead path elimination)</td>
                    <td>activityLifecycle</td>
                </tr>
                <tr>
                    <td>ActivityExecStartEvent</td>
                    <td>Scope</td>
                    <td>An activity starts its execution</td>
                    <td>activityLifecycle</td>
                </tr>
                <tr>
                    <td>ActivityExecEndEvent</td>
                    <td>Scope</td>
                    <td>An activity execution terminates</td>
                    <td>activityLifecycle</td>
                </tr>
                <tr>
                    <td>ActivityFailureEvent</td>
                    <td>Scope</td>

                    <td>An activity failed</td>
                    <td>activityLifecycle</td>
                </tr>
                <tr>
                    <td>CompensationHandlerRegistered</td>
                    <td>Scope</td>
                    <td>A compensation handler gets registered on a scope</td>
                    <td>scopeHandling</td>
                </tr>
                <tr>
                    <td>CorrelationMatchEvent</td>
                    <td>Process</td>
                    <td>A matching correlation has been found upon reception of a message</td>
                    <td>correlation</td>
                </tr>
                <tr>
                    <td>CorrelationNoMatchEvent</td>
                    <td>Process</td>
                    <td>No matching correlation has been found upon reception of a message</td>
                    <td>correlation</td>
                </tr>
                <tr>
                    <td>CorrelationSetWriteEvent</td>
                    <td>Scope</td>
                    <td>A correlation set value has been initialized</td>
                    <td>dataHandling</td>
                </tr>
                <tr>
                    <td>NewProcessInstanceEvent</td>
                    <td>Process</td>
                    <td>A new process instance is created</td>
                    <td>instanceLifecycle</td>
                </tr>
                <tr>
                    <td>PartnerLinkModificationEvent</td>
                    <td>Scope</td>
                    <td>A partner link has been modified (a new value has been assigned to it)</td>
                    <td>dataHandling</td>
                </tr>
                <tr>
                    <td>ProcessCompletionEvent</td>
                    <td>Process</td>
                    <td>A process instance completes</td>
                    <td>instanceLifecycle</td>
                </tr>
                <tr>
                    <td>ProcessInstanceStartedEvent</td>
                    <td>Process</td>
                    <td>A process instance starts</td>
                    <td>instanceLifecycle</td>
                </tr>
                <tr>
                    <td>ProcessInstanceStateChangeEvent</td>
                    <td>Process</td>
                    <td>The state of a process instance has changed</td>
                    <td>instanceLifecycle</td>
                </tr>
                <tr>
                    <td>ProcessMessageExchangeEvent</td>
                    <td>Process</td>
                    <td>A process instance has received a message</td>
                    <td>instanceLifecycle</td>
                </tr>
                <tr>
                    <td>ProcessTerminationEvent</td>
                    <td>Process</td>
                    <td>A process instance terminates</td>
                    <td>instanceLifecycle</td>
                </tr>
                <tr>
                    <td>ScopeCompletionEvent</td>
                    <td>Scope</td>
                    <td>A scope completes</td>
                    <td>scopeHandling</td>
                </tr>
                <tr>
                    <td>ScopeFaultEvent</td>
                    <td>Scope</td>
                    <td>A fault has been produced in a scope</td>
                    <td>scopeHandling</td>
                </tr>
                <tr>
                    <td>ScopeStartEvent</td>
                    <td>Scope</td>
                    <td>A scope started</td>
                    <td>scopeHandling</td>
                </tr>
                <tr>
                    <td>VariableModificationEvent</td>
                    <td>Scope</td>
                    <td>The value of a variable has been modified</td>
                    <td>dataHandling</td>
                </tr>
                <tr>
                    <td>VariableReadEvent</td>
                    <td>Scope</td>
                    <td>The value of a variable has been read</td>
                    <td>dataHandling</td>
                </tr>
            </tbody>
        </table>
        <p> <br />
            The second column specifies whether an event is associated with the process itself or
            with one of its scopes.
            The event type is used for filtering events.
        </p>
        <br />
        <h3 id="Events-Filtering-Events">Filtering Events</h3>
        <h4 id="Events-Process">Filtering at the process level</h4>
        <p>
            Using the <a href="http://wso2.org/library/articles/writing-simple-ws-bpel-process-wso2-bps-apache-ode#deploy-xml">deployment descriptor</a>, it is possible to
            tweak events generation to filtrate which ones get created. First, events can be filtered at the process
            level using one of the following stanza:
        </p>
        <pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:process-events</span> <span style="color: #000066;">generate</span>=<span style="color: #ff0000;">&quot;all&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span> <span style="color: #808080; font-style: italic;">&lt;!-- Default configuration --&gt;</span>

<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:process-events</span> <span style="color: #000066;">generate</span>=<span style="color: #ff0000;">&quot;none&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>

<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:process-events<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>dataHandling<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>activityLifecycle<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:process-events<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre>
        <p>
            The first form just duplicates the default behaviour, when nothing is specified in the deployment descriptor,
            all events are generated. The third form lets you define which type of event is generated, possible types are:
        </p>
        <ul>
            <li>instanceLifecycle</li>
            <li>activityLifecycle</li>
            <li>dataHandling</li>
            <li>scopeHandling</li>
            <li>correlation</li>
        </ul>
        <br />
        <h4 id="Events-Scope">Filtering at the scope level</h4>
        <p>
            It is also possible to define filtering for each scope of your process. This overrides the settings defined
            on the process. In order to define event filtering on a scope, the scope activity MUST have a name in your
            process definition. Scopes are referenced by name in the deployment descriptor:
        </p>
        <pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:deploy</span> <span style="color: #000066;">xmlns:dd</span>=<span style="color: #ff0000;">&quot;http://www.apache.org/ode/schemas/dd/2007/03&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
    ...
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:process-events</span> <span style="color: #000066;">generate</span>=<span style="color: #ff0000;">&quot;none&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:scope-events</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;aScope&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>dataHandling<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bpel:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>scopeHandling<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bpel:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:scope-events<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:scope-events</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;anotherScope&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dd:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>activityLifecycle<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bpel:enable-event<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:scope-events<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:process-events<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    ...
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dd:deploy<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre>
        <p> <b>Note :</b>
            <i>
            Note that it is useless to enable an event associated with the process itself when filtering events on scopes.
            The filter defined on a scope is automatically inherited by its inner scopes. So if no filter is defined on
            a scope, it will use the settings of its closest parent scope having event filters (up to the process).
            Note that what gets inherited is the full list of selected events, not each event definition individually.
            </i>
        </p>
        <br />
        <h3 id="Events-Listeners">Event Listeners</h3>
        <p>
            @product.name@ lets you register your own event listeners to analyse all produced events and do whatever you want
            to do with them. To create a listener, you just need to implement the org.apache.ode.bpel.iapi.BpelEventListener
            interface.
        </p>
        <p>
            Then add your implementation in the server's classpath (BPS_HOME/repository/components/lib) and add a property
            in bps.xml giving your fully qualified implementation class name:
        </p>
        <pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;tns:WSO2BPS</span> <span style="color: #000066;">xmlns:tns</span>=<span style="color: #ff0000;">&quot;http://wso2.org/bps/config&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
  ...
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;tns:EventListeners<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;tns:listener</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.wso2.bps.samples.eventlistener.CustomEventListener&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/tns:EventListeners<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  ...
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/tns:WSO2BPS<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre>
        <p>
            You can try the sample event listener that is shipped with @product.name@ by adding above configuration to the bps.xml and restart the server.
            You can find the source of the sample implementation of event listener <a href="http://svn.wso2.org/repos/wso2/branches/carbon/3.2.0/products/bps/2.1.0/modules/samples/product/bpel-eventlistener">here</a>.
        </p>

        <!--Partner Links - about how partner links declared, work, etc-->
        <p><br /></p>
        <h2 id="Partner-links">Partner links</h2>
        <p>Partner-links are the abstraction for end-point references used in a the BPEL process. So
            a partner-link definition should be able to represent all the information required to
            interact with a external partner. Also the interaction can be two sided as follows.
        </p>
        <ul>
            <li>The process invokes a partner</li>
            <li>A partner invokes the process</li>
        </ul>
        <p>So a partner-link may hold information on WSDL port-type that the business process offers
            to and the WSDL port-type that the partner suppose to offer.
            These information are characterized by a partner-link-type and role name at each
            partner-link. There can be two roles may be defined for a partner-link known as "myRole"
            and "partnerRole". "myRole" specifies the portType provided by the BPEL process to the
            partner. "partnerRole" specifies the interface provided by the partner. Partner-links
            can be defined in global level or scope level at a BPEL process.
        </p>
        <br/>
        <p>eg - </p>
        <pre style='color:#000000;background:#ffffff;'><span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>partnerLink</span>
   <span style='color:#666616; '>xmlns</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#666616; '>http</span><span style='color:#800080; '>:</span><span style='color:#800000; font-weight:bold; '>//</span><span style='color:#5555dd; '>docs.oasis-open.org</span><span style='color:#40015a; '>/wsbpel/2.0/process/executable</span><span style='color:#0000e6; '>"</span>
   <span style='color:#274796; '>name</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>helloPartnerLink</span><span style='color:#0000e6; '>"</span> <span style='color:#274796; '>partnerLinkType</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>ns:HelloPartnerLinkType</span><span style='color:#0000e6; '>"</span>
   <span style='color:#274796; '>myRole</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>me</span><span style='color:#0000e6; '>"</span> <span style='color:#a65700; '>/></span>
</pre>
        <p>The relevant partnerLinkType should be declared in the partner WSDL or the BPEL process
            it-self such that it declares the set of roles and the port-types defined by each of the
            roles.
        </p>
        <p>eg - </p>
        <pre style='color:#000000;background:#ffffff;'><span style='color:#a65700; '>&lt;</span><span style='color:#666616; '>plnk</span><span style='color:#800080; '>:</span><span style='color:#5f5035; '>partnerLinkType</span> <span style='color:#274796; '>name</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>HelloPartnerLinkType</span><span style='color:#0000e6; '>"</span>
   <span style='color:#666616; '>xmlns</span><span style='color:#800080; '>:</span><span style='color:#074726; '>plnk</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#666616; '>http</span><span style='color:#800080; '>:</span><span style='color:#800000; font-weight:bold; '>//</span><span style='color:#5555dd; '>docs.oasis-open.org</span><span style='color:#40015a; '>/wsbpel/2.0/plnktype</span><span style='color:#0000e6; '>"</span><span style='color:#a65700; '>></span>
   <span style='color:#a65700; '>&lt;</span><span style='color:#666616; '>plnk</span><span style='color:#800080; '>:</span><span style='color:#5f5035; '>role</span> <span style='color:#274796; '>name</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>me</span><span style='color:#0000e6; '>"</span> <span style='color:#274796; '>portType</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>ns:processPortType</span><span style='color:#0000e6; '>"</span><span style='color:#a65700; '>/></span>
   <span style='color:#a65700; '>&lt;</span><span style='color:#666616; '>plnk</span><span style='color:#800080; '>:</span><span style='color:#5f5035; '>role</span> <span style='color:#274796; '>name</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>you</span><span style='color:#0000e6; '>"</span> <span style='color:#274796; '>portType</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>ns:partnerPortType</span><span style='color:#0000e6; '>"</span><span style='color:#a65700; '>/></span>
<span style='color:#a65700; '>&lt;/</span><span style='color:#666616; '>plnk</span><span style='color:#800080; '>:</span><span style='color:#5f5035; '>partnerLinkType</span><span style='color:#a65700; '>></span>
</pre>
    </body>
</html>
