<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <title>@product.name@ - Sample Guide - ForEach</title>
        <link href="../css/bps-docs.css" rel="stylesheet"/>
        <link href="styles/dist-docs.css" rel="stylesheet" type="text/css" media="all"/>
    </head>
    <body>
        <h1>Sample Guide - ForEach</h1>
        <h3>Table of Content</h3>
        <ul>
            <li><a href="#objective">Objective</a></li>
            <li><a href="#prerequisites">Prerequisites</a></li>
            <li><a href="#overallIdea">Overall Idea</a></li>
        </ul>

        <br />
        <h3><a name="objective">Objective</a></h3>

        <p>Explains the functionality of &lt;forEach/&gt; construct, where, user can implement
            repetitive tasks. The tasks can be sequential or parallel based on <code>parallel</code> property. So
            &lt;forEach/&gt; becomes advantageous comparing to &lt;while/&gt; or &lt;repeatUntil/&gt;,
            when the repetitive tasks are parallelized.
        </p>
        <br />
        <h3><a name="prerequisites">Prerequisites</a></h3>

        <ul>
            <li>Log in into BPS server admin console.</li>
            <li>Under Business Processes -&gt; Add BPEL.</li>
            <li>Upload the TestForEach.zip , (all samples are located at our <a href="http://svn.wso2.org/repos/wso2/branches/carbon/3.2.0/products/bps/2.1.0/modules/samples/product/src/main/resources/bpel/2.0/">sample repository</a>.)</li>
            <li>Under the Business Processes -&gt; Processes.</li>
            <li>Under the WSDL details widget -&gt; Create instance</li>
        </ul>
        <br />
        <h3><a name="overallIdea">Overall Idea</a></h3>

        <pre style='color:#000000;background:#ffffff;'><span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '><b>forEach</b></span> <span style='color:#274796; '><b> parallel</b></span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>no</span><span style='color:#0000e6; '>"</span> <span style='color:#274796; '><b>counterName</b></span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>ForEachCounter</span><span style='color:#0000e6; '>"</span><span style='color:#a65700; '>></span>
    <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>startCounterValue</span><span style='color:#a65700; '>></span>"1"<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>startCounterValue</span><span style='color:#a65700; '>></span>
    <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>finalCounterValue</span><span style='color:#a65700; '>></span>"3"<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>finalCounterValue</span><span style='color:#a65700; '>></span>
    <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>scope</span> <span style='color:#274796; '>bpmn:label</span><span style='color:#808030; '>=</span><span style='color:#0000e6; '>"</span><span style='color:#0000e6; '>ForEach</span><span style='color:#0000e6; '>"</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>sequence</span><span style='color:#a65700; '>></span>
            <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>assign</span><span style='color:#a65700; '>></span>
                <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>copy</span><span style='color:#a65700; '>></span>
                    <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>from</span><span style='color:#a65700; '>></span>concat($thisStartRequestMsg.body/text(), $ForEachCounter)<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>from</span><span style='color:#a65700; '>></span>
                    <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>to</span><span style='color:#a65700; '>></span>$thisStartRequestMsg.body<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>to</span><span style='color:#a65700; '>></span>
                <span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>copy</span><span style='color:#a65700; '>></span>
            <span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>assign</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>sequence</span><span style='color:#a65700; '>></span>
    <span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>scope</span><span style='color:#a65700; '>></span>
<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '><b>forEach</b></span><span style='color:#a65700; '>></span>
</pre>
        <p>In this sample, 3 iterations take place based on the values of &lt;startCounterValue/&gt;
            and &lt;finalCounterValue/&gt;.
        </p>
        <p>The property
            <code>counterName</code> can be used as a local variable inside the child scope to store
            current iteration value.
            In the above example, <code>ForEachCounter</code> variable value can be 1,2 or 3.
        </p>
        <p>Then inside &lt;scope/&gt;, repetitive task can be implemented.</p>
        <p> <br/>
            <b>Note</b> :<i> &lt;forEach/&gt; can have only one &lt;scope/&gt; child.</i></p>
    </body>
</html>
