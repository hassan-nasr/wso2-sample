<!-- CompensationProcess BPEL Process [Generated by the Eclipse BPEL Designer] -->
<bpel:process name="CompensationProcess"
         targetNamespace="http://wso2.org/bps/samples/compensation"
         suppressJoinFailure="yes"
         xmlns:tns="http://wso2.org/bps/samples/compensation"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         exitOnStandardFault="no" xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <!-- Import the client WSDL -->
                
      <bpel:import location="CompensationProcessArtifacts.wsdl" namespace="http://wso2.org/bps/samples/compensation" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:CompensationServicePLT"
                     myRole="CompensationProcessProvider"
                     />
        
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:CompensationProcessRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:CompensationProcessResponseMessage"/>
        <bpel:variable name="HotelReservationCompensated" type="xsd:int"></bpel:variable>
        <bpel:variable name="HotelReservationActivity" type="xsd:int"></bpel:variable>
        <bpel:variable name="CarReservationActivity" type="xsd:int"></bpel:variable>
        <bpel:variable name="CarReservationCompensated" type="xsd:int"></bpel:variable>
        <bpel:variable name="FlightReservatoinActivity" type="xsd:int"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->               
    
    <bpel:sequence name="TravelPlanProcess">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in CompensationProcess.wsdl 
             -->
        <bpel:assign validate="no" name="Init">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve"><tns:CompensationProcessResponse xmlns:tns="http://wso2.org/bps/samples/compensation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:result></tns:result>
</tns:CompensationProcessResponse>
</bpel:literal>
                </bpel:from>
                <bpel:to variable="output" part="payload"></bpel:to>
            </bpel:copy>
            
            
            
            
            
            <bpel:copy><bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="HotelReservationCompensated"></bpel:to>
            
            </bpel:copy>
            <bpel:copy><bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="HotelReservationActivity"></bpel:to>
            
            </bpel:copy>
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="CarReservationActivity"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="CarReservationCompensated"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="FlightReservatoinActivity"></bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:receive name="receiveInput" partnerLink="client" portType="tns:CompensationProcess" operation="process" variable="input" createInstance="yes" />
        
        
   
        <bpel:scope name="ReservationProcess">
    		<bpel:sequence>
    		<bpel:scope name="ReserveCarScope">
                    <bpel:sequence name="ReserveCar">
                        <bpel:empty name="Empty2"></bpel:empty>
                        <bpel:assign validate="no" name="AssignReserveCarActivity">
                            <bpel:copy>
                                <bpel:from>
                                    <bpel:literal xml:space="preserve">1</bpel:literal>
                                </bpel:from>
                                <bpel:to variable="CarReservationActivity"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                    </bpel:sequence>
                    <bpel:compensationHandler>
                        <bpel:sequence>
                            <bpel:assign validate="no" name="AssignCarReservatoinCompensated">
                                <bpel:copy>
                                    <bpel:from>
                                        <bpel:literal xml:space="preserve">1</bpel:literal>
                                    </bpel:from>
                                    <bpel:to variable="CarReservationCompensated"></bpel:to>
                                </bpel:copy>
                            </bpel:assign>
                        </bpel:sequence>
                    </bpel:compensationHandler>
                </bpel:scope> 
			<bpel:scope name="ReserveHotelScope">
				<bpel:sequence name="ReserveHotel">
                        
		                <!--<bpel:invoke name="ReserveHotel"></bpel:invoke>-->
		                
                        <bpel:empty name="Empty1"></bpel:empty>
                        <bpel:assign validate="no" name="AssignReserveHotelActivity">
                            <bpel:copy>
                                <bpel:from>
                                    <bpel:literal xml:space="preserve">1</bpel:literal>
                                </bpel:from>
                                <bpel:to variable="HotelReservationActivity"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                        
                    </bpel:sequence>
		            <bpel:compensationHandler>
		                <bpel:sequence name="ReserveHotelCompensation"><bpel:assign validate="no" name="AssignHotelReservationCompensated">
                                <bpel:copy>
                                    <bpel:from>
                                        <bpel:literal xml:space="preserve">1</bpel:literal>
                                    </bpel:from>
                                    <bpel:to variable="HotelReservationCompensated"></bpel:to>
                                </bpel:copy>
                            </bpel:assign></bpel:sequence>
		            </bpel:compensationHandler>
                    <!-- <bpel:faultHandlers>
                        <bpel:catch><bpel:sequence><bpel:compensate></bpel:compensate><bpel:rethrow></bpel:rethrow></bpel:sequence></bpel:catch>
                    </bpel:faultHandlers> -->
                </bpel:scope>

			<bpel:scope name="ReserveFlightScope">
		            <bpel:sequence name="ReserveFlight">
		                
		                <!--<bpel:invoke name="ReserveFlight"></bpel:invoke>-->
		                
                        <bpel:empty name="Empty"></bpel:empty>
                        <bpel:assign validate="no" name="AssignReservationFlightActivity">
                            <bpel:copy>
                                <bpel:from>
                                    <bpel:literal xml:space="preserve">1</bpel:literal>
                                </bpel:from>
                                <bpel:to variable="FlightReservatoinActivity"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                        <bpel:throw name="Throw" faultName="tns:ReserveFlightFailed"></bpel:throw>
		            </bpel:sequence>
		
		            <bpel:faultHandlers>
		                <bpel:catch faultName="tns:ReserveFlightFailed"><bpel:sequence>
		                        
		                    <bpel:rethrow></bpel:rethrow></bpel:sequence></bpel:catch>
		            </bpel:faultHandlers>
                	</bpel:scope>
		</bpel:sequence>
            	<bpel:faultHandlers>
                	<bpel:catch faultName="tns:ReserveFlightFailed">
                		<bpel:sequence>
                			<bpel:compensateScope name="CompensateReserveHotel" target="ReserveHotelScope"></bpel:compensateScope>
                			<bpel:compensateScope name="CompensateReserveCar" target="ReserveCarScope"></bpel:compensateScope>
                			<!-- <bpel:rethrow></bpel:rethrow> -->
              			</bpel:sequence>
               		</bpel:catch>  
                
            </bpel:faultHandlers>
        </bpel:scope>
        
        
        <!-- Generate reply to synchronous request -->
        <bpel:reply name="replyOutput" partnerLink="client" portType="tns:CompensationProcess" operation="process" variable="output" />
    </bpel:sequence>
      </bpel:process>

