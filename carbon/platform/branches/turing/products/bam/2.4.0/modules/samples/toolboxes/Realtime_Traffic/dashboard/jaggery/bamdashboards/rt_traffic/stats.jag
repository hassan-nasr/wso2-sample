</html>
<body>
<script src="jquery.min.js"></script>
<script type="text/javascript" src="jquery.flot.min.js"></script>
<script type="text/javascript" src="jquery.flot.time.min.js"></script>    
<script type="text/javascript" src="jquery.flot.axislabels.js"></script>

<style type="text/css">
#flotcontainer {
    width: 800px;
    height: 400px;
    text-align: center;
    margin: 0 auto;
}
</style>

<%
  var process = require('process');
  var localHost = process.getProperty('carbon.local.ip');
  var httpsPort = process.getProperty('mgt.transport.https.port');
  var req_username = request.getParameter("username");
  var req_password = request.getParameter("password");
  if (req_username != null) {
      session.put("username", req_username);
      session.put("password", req_password);
  }
  var session_username = session.get("username");
  var session_password = session.get("password");
  if (session_username == null) {
      response.sendRedirect('login.jag');
  }
%>

<script>
var data = [];
var dataset;
var totalPoints = 50;
var updateInterval = 250;

function initData() {
    var now = new Date().getTime() - (updateInterval * totalPoints);
    while (data.length < totalPoints) {     
        var temp = [now += updateInterval, 0];
        data.push(temp);
    }
}

function updateData(timestamp, value) {
    var now = new Date().getTime();
    var temp = data[data.length - 1];
    if (temp[0] >= timestamp) {
        return;
    }
    if (data.length >= totalPoints) {
        data.shift();
    }
    temp = [timestamp, value];
    data.push(temp);
    while (data.length > 0) {
        if ((parseInt(data[0][0]) + (totalPoints * 1000)) < now) {
            data.shift();
        } else {
            break;
        }
    }
}

var options = {
    series: {
        lines: {
            show: true,
            lineWidth: 1.2,
            fill: true
        }
    },
    xaxis: {
        mode: "time",
        tickSize: [1, "second"],
        tickFormatter: function (v, axis) {
            var date = new Date(v);

            if (date.getSeconds() % 5 == 0) {
                var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return hours + ":" + minutes + ":" + seconds;
            } else {
                return "";
            }
        },
        axisLabel: "Time",
        axisLabelUseCanvas: true,
        axisLabelFontSizePixels: 12,
        axisLabelFontFamily: 'Verdana, Arial',
        axisLabelPadding: 10
    },
    yaxis: {
        min: 0,
        max: 100,        
        tickSize: 5,
        tickFormatter: function (v, axis) {
            if (v % 20 == 0) {
                return v;
            } else {
                return "";
            }
        },
        axisLabel: "Transactions Per Second (TPS)",
        axisLabelUseCanvas: true,
        axisLabelFontSizePixels: 12,
        axisLabelFontFamily: 'Verdana, Arial',
        axisLabelPadding: 6
    },
    legend: {        
        labelBoxBorderColor: "#fff"
    }
};

$(document).ready(function () {
    initData();

    dataset = [
        { label: "Requests", data: data }
    ];

    $.plot($("#flotcontainer"), dataset, options);

    $.ajaxSetup({
        headers: { 'Authorization':'Basic ' + btoa('<%=session_username%>:<%=session_password%>') }
    });

    function update() {
        $.get("https://<%=localHost%>:<%=httpsPort%>/message_store?type=RT_SAMPLE_STATS", function(input, status) {
          if (input === "_NODATA_") { return; }
          if (input === "_AUTH_FAILURE_") {
              alert("Authentication Failure!");
              window.location.href = "login.jag";
          } else {
              var inObj = JSON.parse(input);
              updateData(inObj.timestamp, inObj.payload);
              $.plot($("#flotcontainer"), dataset, options)
              setTimeout(update, updateInterval);
          }
        });    
    }

    update();
});



</script>

<!-- HTML -->
<div id="flotcontainer"></div>

</body>
</html>
