<!--
  ~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<html>
    <body>
        <p>[<a
                href="http://wso2.org/downloads/solutions/data-services">Download</a>]
            | [<a href="../index_docs.html">Documentation Home</a>] | [<a
                    href="../release_notes.html">Release Note</a>]
        </p>
        <h1>Nested Query Sample</h1>
        <h2>Introduction</h2>
        <p>
            When using a data service query, we may need to use the result of one query to be used
            as an input parameter of another query, in that situation we use the nested query
            feature which is available in<a
                href="http://wso2.org/projects/data-services-server/java">WSO2 Data Services
            Server</a>.
        </p>
        <h2>Prerequisites</h2>
        <p>
            The sample data service "NestedQuerySample" should be deployed as per the instructions
            mentioned in
            <a href="deploying_samples.html">Deploying Samples</a>
            section.
        </p>
        <h2>Running the Sample</h2>
        <p>The sample service can be run using the "tryit" tool, which is bundled with<a
                href="http://wso2.org/projects/data-services-server/java">WSO2 Data Services
            Server</a>.
        </p>
        <h2>Service Definition</h2>
        <p>
            The service contains the following queries.
            <ul>
                <li>employeesInOfficeSQL - This query takes in an office code, and prints the
                    details of all the employess in that office.
                </li>
                <li>listOfficesSQL - This query lists all the offices that is in the database. When
                    office information is printed, all the employees that belongs to an office is
                    also printed using a nested query, which refers to the "employeesInOfficeSQL"
                    query.
                </li>
                <li>customerNameSQL - This query takes in the customer number as a parameter and
                    return the customer name. In this query, in the result section, there is no
                    "rowName" defined, only an element wrapper. With this option, a separate element
                    will not be created for every record in the result, but the record content will
                    be directly added to the outer element. This is best used in a query where,
                    there is only one record to be returned.
                </li>
                <li>customerOrdersSQL - This query prints the details of all the orders that are in
                    the database, in the result elements, a nested query which references
                    "customerNameSQL" query is used. In this way, the name of the customer who
                    placed the order can be also returned with the order details, by using the
                    nested query.
                </li>
            </ul>
        </p>
        <h2>Sample Run</h2>
        <p>
            A sample run of the service using the "tryit" tool is shown below.
            <br/>
            <p>
                <img src="../images/samples/nested_query_sample_img1.png"/>
                <br/>
                Figure 1: Nested query based operation invocation using the "listOfficesSQL" query.
            </p>
            <p>
                <br/>
                <br/>
                <img src="../images/samples/nested_query_sample_img2.png"/>
                <br/>
                Figure 2: Nested query based operation invocation using the "customerOrdersSQL"
                query.
            </p>
            <br/>
        </p>
    </body>
</html>
