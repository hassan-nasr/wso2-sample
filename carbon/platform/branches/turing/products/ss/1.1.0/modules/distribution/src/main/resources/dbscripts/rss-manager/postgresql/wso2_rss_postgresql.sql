CREATE TABLE RM_ENVIRONMENT(
  ID serial,
  NAME VARCHAR(128) NOT NULL,
  TENANT_ID INTEGER NOT NULL,
  PRIMARY KEY (ID),
  UNIQUE (NAME, TENANT_ID)
);

CREATE TABLE RM_SERVER_INSTANCE (
  ID serial,
  ENVIRONMENT_ID INTEGER NOT NULL,
  NAME VARCHAR(128) NOT NULL,
  SERVER_URL VARCHAR(1024) NOT NULL,
  DBMS_TYPE VARCHAR(128) NOT NULL,
  INSTANCE_TYPE VARCHAR(128) NOT NULL,
  SERVER_CATEGORY VARCHAR(128) NOT NULL,
  ADMIN_USERNAME VARCHAR(128),
  ADMIN_PASSWORD VARCHAR(128),
  TENANT_ID INTEGER NOT NULL,
  UNIQUE (NAME, ENVIRONMENT_ID, TENANT_ID),
  PRIMARY KEY (ID),
  FOREIGN KEY (ENVIRONMENT_ID) REFERENCES RM_ENVIRONMENT (ID)
);

CREATE TABLE RM_DATABASE (
  ID serial,
  NAME VARCHAR(128) NOT NULL,
  RSS_INSTANCE_ID INTEGER NOT NULL,
  TYPE VARCHAR(15) NOT NULL,
  TENANT_ID INTEGER NOT NULL,
  UNIQUE (NAME, RSS_INSTANCE_ID, TENANT_ID),
  PRIMARY KEY (ID),
  FOREIGN KEY (RSS_INSTANCE_ID) REFERENCES RM_SERVER_INSTANCE (ID)
);

CREATE TABLE RM_DATABASE_USER (
  ID serial,
  USERNAME VARCHAR(16) NOT NULL,
  RSS_INSTANCE_ID INTEGER NOT NULL,
  TYPE VARCHAR(15) NOT NULL,
  TENANT_ID INTEGER NOT NULL,
  UNIQUE (USERNAME, RSS_INSTANCE_ID, TENANT_ID),
  PRIMARY KEY (ID)
);

CREATE TABLE RM_USER_DATABASE_ENTRY (
  ID serial,
  DATABASE_USER_ID INTEGER NOT NULL,
  DATABASE_ID INTEGER NOT NULL,
  PRIMARY KEY (ID),
  UNIQUE (DATABASE_USER_ID, DATABASE_ID),
  FOREIGN KEY (DATABASE_USER_ID) REFERENCES RM_DATABASE_USER (ID),
  FOREIGN KEY (DATABASE_ID) REFERENCES RM_DATABASE (ID)
);

CREATE TYPE PRIVENABLE AS ENUM ('N','Y');
CREATE TABLE RM_USER_DATABASE_PRIVILEGE (
  ID serial,
  USER_DATABASE_ENTRY_ID INTEGER NOT NULL,
  SELECT_PRIV PRIVENABLE NOT NULL,
  INSERT_PRIV PRIVENABLE NOT NULL,
  UPDATE_PRIV PRIVENABLE NOT NULL,
  DELETE_PRIV PRIVENABLE NOT NULL,
  CREATE_PRIV PRIVENABLE NOT NULL,
  DROP_PRIV PRIVENABLE NOT NULL,
  GRANT_PRIV PRIVENABLE NOT NULL,
  REFERENCES_PRIV PRIVENABLE NOT NULL,
  INDEX_PRIV PRIVENABLE NOT NULL,
  ALTER_PRIV PRIVENABLE NOT NULL,
  CREATE_TMP_TABLE_PRIV PRIVENABLE NOT NULL,
  LOCK_TABLES_PRIV PRIVENABLE NOT NULL,
  CREATE_VIEW_PRIV PRIVENABLE NOT NULL,
  SHOW_VIEW_PRIV PRIVENABLE NOT NULL,
  CREATE_ROUTINE_PRIV PRIVENABLE NOT NULL,
  ALTER_ROUTINE_PRIV PRIVENABLE NOT NULL,
  EXECUTE_PRIV PRIVENABLE NOT NULL,
  EVENT_PRIV PRIVENABLE NOT NULL,
  TRIGGER_PRIV PRIVENABLE NOT NULL,
  PRIMARY KEY (ID),
  UNIQUE (USER_DATABASE_ENTRY_ID),
  FOREIGN KEY (USER_DATABASE_ENTRY_ID) REFERENCES RM_USER_DATABASE_ENTRY (ID)
);

CREATE TABLE RM_SYSTEM_DATABASE_COUNT (
  ENVIRONMENT_ID INTEGER NOT NULL,
  COUNT INTEGER NOT NULL DEFAULT 0,
  PRIMARY KEY (ENVIRONMENT_ID),
  FOREIGN KEY (ENVIRONMENT_ID) REFERENCES RM_ENVIRONMENT (ID)
);

CREATE TABLE RM_DB_PRIVILEGE_TEMPLATE (
  ID serial,
  ENVIRONMENT_ID INTEGER NOT NULL,
  NAME VARCHAR(128) NOT NULL,
  TENANT_ID INTEGER NOT NULL,
  PRIMARY KEY (ID),
  UNIQUE (ENVIRONMENT_ID, NAME, TENANT_ID),
  FOREIGN KEY (ENVIRONMENT_ID) REFERENCES RM_ENVIRONMENT (ID)
);

CREATE TABLE RM_DB_PRIVILEGE_TEMPLATE_ENTRY (
  ID serial,
  TEMPLATE_ID INTEGER NOT NULL,
  SELECT_PRIV PRIVENABLE NOT NULL,
  INSERT_PRIV PRIVENABLE NOT NULL,
  UPDATE_PRIV PRIVENABLE NOT NULL,
  DELETE_PRIV PRIVENABLE NOT NULL,
  CREATE_PRIV PRIVENABLE NOT NULL,
  DROP_PRIV PRIVENABLE NOT NULL,
  GRANT_PRIV PRIVENABLE NOT NULL,
  REFERENCES_PRIV PRIVENABLE NOT NULL,
  INDEX_PRIV PRIVENABLE NOT NULL,
  ALTER_PRIV PRIVENABLE NOT NULL,
  CREATE_TMP_TABLE_PRIV PRIVENABLE NOT NULL,
  LOCK_TABLES_PRIV PRIVENABLE NOT NULL,
  CREATE_VIEW_PRIV PRIVENABLE NOT NULL,
  SHOW_VIEW_PRIV PRIVENABLE NOT NULL,
  CREATE_ROUTINE_PRIV PRIVENABLE NOT NULL,
  ALTER_ROUTINE_PRIV PRIVENABLE NOT NULL,
  EXECUTE_PRIV PRIVENABLE NOT NULL,
  EVENT_PRIV PRIVENABLE NOT NULL,
  TRIGGER_PRIV PRIVENABLE NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (TEMPLATE_ID) REFERENCES RM_DB_PRIVILEGE_TEMPLATE (ID)
);

