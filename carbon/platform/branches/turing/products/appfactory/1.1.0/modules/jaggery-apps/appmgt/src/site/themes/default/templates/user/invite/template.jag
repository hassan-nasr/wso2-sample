<% jagg.template("user/invite", function(inputs, outputs, jagg) { %>

<%
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
    jagg.module("permission").checkUserActionPermission(applicationKey,PERMISSION_CONFIGURATION_API_MANAGER);
    var hasInviteUserPermission = outputs.hasInviteUserPermission;
%>


<script type="text/javascript">
/*this method fill up the table that depicts the roles and the relevant users */
var addedUsers=[];
function updateTable() {

    jagg.post("../blocks/application/users/get/ajax/list.jag", {
        action: "getAppUsersWithRoles",
        applicationKey: '<%=applicationKey%>'
    }, function (result) {
        appUsers= <%=session.get("appUsers")%>;     //this is put in to the session in the block level /blocks/application/users/get/ajax/list.jag
        //$('#btn_nvite_users').removeAttr('disabled').val($('#btn_nvite_users').attr('prev-val'));
    }, function (jqXHR, textStatus, errorThrown) {
        appUsers= <%=session.get("appUsers")%>;
        //$('#btn_nvite_users').removeAttr('disabled').val($('#btn_nvite_users').attr('prev-val'));
    });
}

/*send the invitaion a given user for a given roles*/
function sendInvite(newUserNames,role,count,length){

    jagg.post("../blocks/application/users/add/ajax/add.jag", {
                action:"inviteUserToApplication",
                applicationKey:$("#applicationKey").attr('value'),
                requestersUsername:$("#userName").attr('value'),
                newUsername:newUserNames,
                newUserRole:role
            },

            function (result) {

                if(result != undefined || result==true){
                    if(count==(length-1)){

                        window.location.replace("<%=jagg.getAbsoluteUrl("/site/pages/user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>");
                    }
                    updateTable();
                    return result;
                }else if(result==false){

                  //showNotification('notifier','message','This user has already been invited!','warn');
                    return result;
                }
            },
            function (jqXHR, textStatus, errorThrown) {
                // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');
                updateTable();
                if(count==(length-1)){

                    window.location.replace("<%=jagg.getAbsoluteUrl("/site/pages/user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>");
                }
            });

}

/* This method validates a single email address given as an input parameter */
function ValidateEmail(inputText){

    var mailformat = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
    if(mailformat.test(inputText)){
        return true;
    }
    else{
        return false;
    }

}
/*This method is not removed.kept for future use*/
function searchUser(autocomplete){
	<%
	if(getProperty(USER_SEARCH_STATUS) === "false"){
		%>return;<%
	}
	%>
    var userName;
    var searchPara;
    if(autocomplete==true){
        searchPara=searchText+"*";
    }
    else{
        searchPara=searchText;
    }
    userArrayList.length=0;
    $('#userListContainer').html("");
    ClearOptionsFast('autocompleteBox');
    //jagg post to get users contains a given part of text in the name
    jagg.post("../blocks/application/users/get/ajax/list.jag", {
                action:"getAllUsersHavingName",
                userName: searchPara//$("#searchTxt").attr('value')
            },
            function (result) {
                userNames=JSON.parse(result);

            },
            function (jqXHR, textStatus, errorThrown) {
                // jagg.message({content:'User Searching Failed',type:'info' });
            });

}
var appUsers={};
var invitaionArray=[];
$(document).ready(function(){
  //  loadAllUsers();
  //  appUsers=sessionStorage.getItem("appUsers");
    updateTable();//to refresh the session variuable
    //$('#btn_nvite_users').prop("disabled", true);
   // $('#addToListBtn').prop('disabled',true);
    appUsers= <%=session.get("appUsers")%>;

    $('#addToListBtn').click(function(){
	jagg.removeMessage('invitememberuk');
        var testUser= $('#allUsersList').val();
        //check whether user is in the app
        if(testUser.length>0){
        if(addedUsers.indexOf(testUser)===-1){
        addedUsers.push(testUser);
           // $('#btn_nvite_users').prop("disabled", false);
        if(ValidateEmail(testUser)){
        if(!isUserIntheApp(testUser)){
            //user in not in the app
            getUserInfo(testUser);

        }else{
            //user is in the app
            //show error notificaiton

            jagg.message({
                content: "Specified user is already in the application team",
                type: 'warning', id:'invitememberuk'
            });
        }

        }else{
            jagg.message({
                content: "Invalid email address entered - Re-enter a valid email address",
                type: 'error', id:'invitememberuk'
            });

        }
        }else{
            jagg.message({
                content: "Specified user is already added to the invitation list",
                type: 'warning', id:'invitememberuk'
            });

        }
        $('#allUsersList').val('');
        }else{
            jagg.message({
                content: "Email can not be empty- Enter a valid email address",
                type: 'warning', id:'invitememberuk'
            });

        }
    });

    function createUlElementFoUser(User){
        var userName=User.userName;
        var id=userName.split('@')[0];
        var user={};
        user.userName=userName;
        var roles=[];
        user.roles=roles;
        invitaionArray.push(user);

        $('#userListTable').append($('<li class="list_row_item invitable" id="'+id+'" data-user="'+userName +'">'+
                '<ul class="list_row  ">'+
                '<li class="list_col first_list_col team_member">'+
                '<div class="list_col_content" style="cursor:default">'+
                '<div class="image_list">'+
                '<dl> '+
                '<dt>'+User.displayName+'</dt> '+
                '<dd class="img"><span class="icon-user"></span></dd>'+
                '<dd id="user_name">'+userName+'</dd>'+
                '</dl>'+
                '</div> '+
                '</div> '+
                '</li> '+
                '<li class="list_col  team_developer"> '+
                '<div class="list_col_content"> '+
                '<input type="checkbox" name="role" data-role="developer" class="assign_roles" data-user="'+userName+'" />'+
                '</div>'+
                '</li>'+
                '<li class="list_col team_devops">'+
                '<div class="list_col_content">'+
                '<input type="checkbox" name="role" data-role="devOps" class="assign_roles" data-user="'+userName+'"/>'+
                '</div>'+
                '</li>'+
                '<li class="list_col team_qa">'+
                '<div class="list_col_content">'+
                '<input type="checkbox" name="role" data-role="qa" class="assign_roles" data-user="'+userName+'"/>'+
                '</div>'+
                '</li>'+
                '<li class="list_col last_list_col team_remove">'+
                '<div class="list_col_content" style="margin-top:-2px;">'+
                '<a href="#" class="icon-remove-sign remove_user"  data-id="'+id+'" data-user="'+userName+'"></a>'+
                '</div>'+
                '</li>'+
                '</ul>'+
                '</li>'));
        $('.assign_roles').click(function(event){

            event.stopImmediatePropagation();
           var user=$(this).attr('data-user');
            var role=$(this).attr('data-role');
            if(this.checked) {
                addUserToInvitationArray(userName,role);
            }else{
                removeFromInvitaionArray(userName,role);
            }
            if(invitaionArray.length>0){
                //enable invitation button
            //    $('#btn_nvite_users').prop("disabled",false);
            }else{
                //disable invitation but
            //    $('#btn_nvite_users').prop("disabled", true);
            }

        });
        $('.remove_user').click(function(){
            var id=$(this).attr('data-id');

            $("#"+id).remove();
            removeUserFromInvitaionArray($(this).attr('data-user'));
            var index=addedUsers.indexOf($(this).attr('data-user'));
            if(index>=0){
                addedUsers.splice(index,1);
            }
            if($('.invitable').length===0){
               // $('#btn_nvite_users').prop("disabled", true);
            }
		if($('input[type=checkbox]:checked').size()==0){
			//$('#btn_nvite_users').prop("disabled", true);
		}
		
        });
    }
    function getUserInfo (user){
	jagg.removeMessage('invitememberuk');
        /*comment the following line "user=user.replace('@','.');" if this is not connected to
        * OT LDAP*/
         // user=user.replace('@','.');
        jagg.post("../blocks/user/get/ajax/list.jag", {
                    action:"getUserInfoBean",
                    userName: user
                },
                function (result) {

                    uresult=JSON.parse(result);
                    if(uresult.userName.length>0){

                        createUlElementFoUser(uresult);


                    }else{
                        //user in not in the LDAP
                       jagg.message({
                            content: "Specified user is not registered - Select a user who is registered",
                            type: 'warning', id:'invitememberuk'
                        });

                    }


                },function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');
			jagg.message({
                            content: "Specified user is not registered - Select a user who is registered",
                            type: 'warning', id:'invitememberuk'
                        });

                });


    }

    function isUserIntheApp(userName){
        for(var i in appUsers){
            if(appUsers[i].userName==userName){
                return true;
                break;
            }
        }
        return false;
    }

    $('#btn_nvite_users').click(function(){
	jagg.removeMessage('invitememberuk');
        if(invitaionArray.length>0){
        if(validateInvitees()){
            inviteAllNew();
            invitaionArray=[];
        }else{
            jagg.message({
                content: "Users without roles can be found in the list - Assign roles and continue with invitation process",
                type: 'warning', id:'invitememberuk'
            });

        }
        }else{
            jagg.message({
                content: "Empty list of invitees - Add users to the invitation list ",
                type: 'error', id:'invitememberuk'
            });

        }

    });

    $('#btn_cancel').click(function(){
        $('.invitable').each(function(){
            $(this).remove();
        });
    });


  function  addUserToInvitationArray(userName,role){
      //check whether user is in the invitatiion array

      //if so push the role
      var User=isUserAlreadyInInvitationArray(userName)
      if(User!==null){
          //user already in the invitation array
          if(User.roles.indexOf(role)===-1){
              User.roles.push(role);
          }

      }else{
          //user not in the invitaiton array

          var user={};
          user.userName=userName;
          var roles=[];
          roles.push(role);
          user.roles=roles;
          invitaionArray.push(user);
      }
            //else create user and add the role
  }
  function removeFromInvitaionArray(userName,role){
      var User=isUserAlreadyInInvitationArray(userName);
      if(User!==null){
          var index=User.roles.indexOf(role);
          User.roles.splice(index,1);
      }
  }
    function removeUserFromInvitaionArray(userName){
        var User=isUserAlreadyInInvitationArray(userName);
        if(User!==null){
            var index=invitaionArray.indexOf(User);
            invitaionArray.splice(index, 1);
        }
    }
  function isUserAlreadyInInvitationArray(userName){

      for (var i in invitaionArray){
          if(invitaionArray[i].userName===userName){
              return invitaionArray[i];
              break;
          }
      }
      return null;
  }



   function inviteAllNew(){
       var l=invitaionArray.length;
       $('#btn_nvite_users').attr('disabled','disabled').attr('prev-val',$('#btn_nvite_users').val()).val('Inviting..');
       for(var j in invitaionArray){
          sendInvite(invitaionArray[j].userName,invitaionArray[j].roles.toString(),j,l);
          // alert(invitaionArray[j].roles.toString());
       }
       updateTable();//to refresh the cache



}


});
var loadAllUsers = function(){

     jagg.post("../blocks/application/users/get/ajax/list.jag", {
                action:"getAllUsersHavingName",
                userName: '*'//$("#searchTxt").attr('value')
            },
            function (result) {
                userNames=JSON.parse(result);

                if(userNames.usernames.length>0){
                    for(var i=0;i<userNames.usernames.length;i++){
                        $('#allUsersList').append($('<option data-description="'+userNames.usernames[i]+'" data-image="no" >'+userNames.usernames[i]+'</option>'));
                    }
                }

                $("#allUsersList").select2({
                    formatResult: selectBoxOptionFormat,
                    minimumResultsForSearch: -1,
                    containerCssClass : "error" });
                });


}

function validateInvitees(){
    for(var user in invitaionArray){
        var tmpUser=invitaionArray[user];
        if(tmpUser.roles.length===0){
            return false;
        }
    }
    return true;
}


</script>

<div class="container">

				<article class="main">

				     <% jagg.includeBlock("page/messages", null); %>
                    <header class="separator">
                        <div class="content">
                            <ol class="breadcrumb">
                                    <li class="breadcrumb_item"><a class="breadcrumb_link" href="<%=jagg.getAbsoluteUrl("/site/pages/user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>">Home</a></li>
                                    <li class="breadcrumb_item"><h1>Add Members</h1></li>
                            </ol>
                         </div>
                    </header>
 					<section class="separator">
						<div class="mini_content well">
                            <div class="form-container" name="#">
                            <div id="select_user_box">
                            	<label>Email</label><br />
                                <div class="input_row">
                                  <!--  <select class="select_list_custom select2-input" id="allUsersList" type="text"></select>     -->
                                    <input type="text" class="select2-input" spellcheck="false" id="allUsersList" autocapitilize="off" autocorrect="off" autocomplete="off">
                                    <button class="btn sub" id="addToListBtn">Add to List</button>
                                </div>
                            </div>

                            <ul class="list_table" id="userListTable" >
                            	<li class="list_row_item first_list_row_item">
                                    <ul class="list_row first_list_row border-remover">
                                        <li class="list_col first_list_col team_member">
                                        	<h2 class="list_col_heading">&nbsp;</h2>
                                        </li>
                                        <li class="list_col  team_developer">
                                        	<h2 class="list_col_heading">Developer</h2>
                                        </li>
                                        <li class="list_col team_devops">
                                        	<h2 class="list_col_heading">DevOps</h2>
                                        </li>
                                        <li class="list_col team_qa">
                                        	<h2 class="list_col_heading">QA</h2>
                                        </li>
                                        <li class="list_col last_list_col team_remove">
                                        	<h2 class="list_col_heading">&nbsp;</h2>
                                        </li>
                                     </ul>
                                </li>
                           	</ul>
                            <div id="action_container" class="push_top_20">
                            	<button type="button" class="btn main" id="btn_nvite_users">Invite</button> <a id="btn_cancel" href="javascript:location.href='/appmgt/site/pages/user.jag?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>'">Cancel</a>
                            </div>
                            </div>



  					  <div class="clearfix"></div>
					  </div>
					</section>

				<div class="clearfix"></div>
                </article>
</div><!-- /container -->
<input type="hidden" id="userName" value='<%= session.get("LOGGED_IN_USER") %>' />
<input type="hidden" id="applicationKey" value='<%= applicationKey %>' />





        <% }); %>