<% jagg.template("configureenvironment/apimanager/list", function(inputs, outputs, jagg) { %>
<%
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
  //  jagg.module("permission").checkUserActionPermission(applicationKey,PERMISSION_CONFIGURATION_API_MANAGER);
//Getting the apiManager Server Url here.
var apiManagerStoreUrl = getProperty(API_MANAGER_STORE_URL);
var apiManagerServerUrl = getProperty(API_MANAGER_SERVER_URL);
var modApiManager = jagg.module("apimanager");
%>

<input type="hidden" value="<%=applicationKey%>" name="applicationKey" id="applicationKey" />
<input type="hidden" name="userName"  id="userName" value='<%= session.get("LOGGED_IN_USER") %>'/>
<!-- adding script elements here -->
<script type="text/javascript">
    var keyMappins={};
    
	function loadKeyNameMappings(){
		keyMappins['sandboxKey']="Sandbox Access Token";
		keyMappins['sandboxConsumerKey']="Sandbox Consumer Key";
		keyMappins['sandboxConsumerSecret']="Sandbox Consumer Secret";
		keyMappins['prodKey']="Production Access Token";
		keyMappins['prodConsumerKey']="Production Consumer Key";
		keyMappins['prodConsumerSecret']="Production Consumer Secret";
	}
	
	function addApi(applicationKey) {
        jagg.post("../blocks/apimanager/add/ajax/add.jag", {
            action:"createApplication",
            applicationKey:applicationKey
        });
    }

    function generateKeys(apiName, apiVersion, apiProvider) {
        jagg.post("../blocks/apimanager/key/ajax/key.jag", {
            action:"generateKeys",
            applicationKey:$("#applicationKey").val(),
            apiName:apiName,
            apiVersion:apiVersion,
            apiProvider:apiProvider
        },
        function (result) {
            syncKeys();
        },
        function (jqXHR, textStatus, errorThrown) {
        //add the error label in the grid
        });
    }
   
    function syncKeys(){
    	getSavedKeys(true);
    }
    
    function getSavedKeys(isSyncNeeded){
    	$("#keySection").html('<span class="icon-spinner icon-spin icon-large"></span>');
    	jagg.post("../blocks/apimanager/key/ajax/key.jag", {
    		action:"getSavedKeys",
    		applicationKey:$("#applicationKey").val(),
    		isSync: isSyncNeeded
    	},
    	function (result) {
    		var parsedResult = jQuery.parseJSON(result); 		
    		var keyTableBodyHTML = '<li class="list_row_item first_list_row_item">'
            +'<ul class="list_row first_list_row">'
                +'<li class="list_col first_list_col resources_apikey_col">'
                   +'<h2 class="list_col_heading">Key</h2>'
                +'</li>'
                +'<li class="list_col resources_apivalue_col">'
                    +'<h2 class="list_col_heading">Value</h2>'
               +'</li>'
           + '</ul>'
        + '</li>';
    		$("#keySection").empty();
    		$("#keySection").append(keyTableBodyHTML);  

			var keys = parsedResult['dependencies'];
			
			var keysAvailable = true;
			for(var key in keys){
				var valuePairArray = keys[key];
				for(var index in valuePairArray){
    				var valuePair = valuePairArray[index];
    				var name = valuePair.name;
    				var value = valuePair.value;
	   				if(value == ""){
	   					keysAvailable = false;
	   					break;
	   				}
				}
	   		 }
	   		 
	   		 if(keysAvailable){
	   			for(var key in keys){
					var valuePairArray = keys[key];
					for(var index in valuePairArray){
	    				var valuePair = valuePairArray[index];
	    				var name = valuePair.name;
	    				var value = valuePair.value;
	    				keyTableBodyHTML +='<li class="list_row_item  ">'+
						                 '<ul class="list_row  ">'+
						                     '<li class="list_col first_list_col resources_apikey_col">'+
						                         '<div class="list_col_content">'+
						                             '<span class="prime">' + keyMappins[name] + '</span>'+
						                         '</div>'+
						                     '</li>'+
						                     ' <li class="list_col resources_apivalue_col">'+
						                         '<div class="list_col_content">'+
						                             '<span class="prime">' + value + '</span>'+
						                         '</div>'+
						                     '</li>'+
						                 '</ul>'+
						               '</li>';
				
	    			} 			
	    		}    		
				$("#keySection").append(keyTableBodyHTML);  
	   		 }
	   		 else
	   		 {
	   			getSavedKeys(true); 
	   		 }
	
    	},
    	function (jqXHR, textStatus, errorThrown) {  
    		$("#keySection").hide();
    		jagg.message({
                content: 'Error occurred while retriving Keys',
                type: 'error',
                id:'uniqueId1'
            });
    	});
    }
    
    function getAppOnwer() {
        jagg.post("../blocks/application/users/get/ajax/list.jag", {
            action:"getAppOwner",
            applicationKey:$("#applicationKey").val()
        },
        function (result) {
        	var appOwnerId = result;
            if($("#userName").val() == appOwnerId ){ 	
            	var $apimBtn= $('<a id="gotoApiManagerbtn" href="<%=apiManagerStoreUrl%>" class="btn main btn_list_first" target="_blank">Go to API Manager</a>').click(function(){addApi('<%=applicationKey%>')});
                $('#btnItem').append($apimBtn);
            	$('#renewbtnContainer').append('<button type="button" id="renewApiBtn" class="btn main push_top_20 push_bottom_40" onclick="syncKeys()">Renew API Keys</button>');
            	
            	drawAPIsTable();
            }else{
            	$('#renewbtnContainer').append('<div class="main push_top_20 push_bottom_40"></div>');
            	getAPIsOfAppOwnerApp(appOwnerId);
            	getKeysFromRegistry();
            }
        },
        function (jqXHR, textStatus, errorThrown) {
        //add the error label in the grid
        });
    }
    
    function getAPIsOfAppOwnerApp(appOwnerId) {
        jagg.post("../blocks/apimanager/get/ajax/get.jag", {
            action:"getAPIsOfAppOwnerApp",
            applicationKey:$("#applicationKey").val(),
            appOwnerId:appOwnerId
        },
        function (result) {
        	parsedResult=jQuery.parseJSON(result);
        	if(parsedResult.length == 0){
        		$("#apiSection").html("<div class='noData-message'>APIs have not been subscribed to yet.</div>");
        	}

            var tableBodyHTML = '<li class="list_row_item first_list_row_item">'
            						+'<ul class="list_row first_list_row">'
            							+'<li class="list_col first_list_col resources_apiname_col">'
            								+'<h2 class="list_col_heading">Name & Version</h2>'   
            							+'</li>'
						                +'<li class="list_col resources_apidescription_col">'
						                	+'<h2 class="list_col_heading">Description</h2>'   
						                +'</li>'
						                +'<li class="list_col resources_apidescription_col">'
					                	+'<h2 class="list_col_heading">Endpoints</h2>'   
					                    +'</li>'
						                +'<li class="list_col last_list_col resources_apiprovider_col">'
						                	+'<h2 class="list_col_heading">Provider</h2>'    
						                +'</li>'
						              +'</ul>'
                                 +'</li>';
            
        	
            
        	for(var i=0; i < parsedResult.length;i++){
        		var entry = parsedResult[i].apiInfo;
        		for(var j=0; j < entry.length;j++){
            		var API = entry[j];
                	var endpointUrl = ' <%=apiManagerStoreUrl%>'+'/'+API.name+'/'+API.version;
            		 tableBodyHTML +='<li class="list_row_item  ">'+
                     '<ul class="list_row  ">'+
                         '<li class="list_col first_list_col resources_apiname_col">'+
                             '<div class="list_col_content">'+
                                 '<ul class="list">'+
                                     '<li><a href="#">' + API.name + '</a></li>'+
                                     '<li class="small">' + API.version + '</li>'+
                                 '</ul>'+
                             '</div>'+
                         '</li>'+
                         '<li class="list_col resources_apidescription_col">'+
                         	'<div class="list_col_content">'+ API.context + '</div>'+
                         '</li>'+
                         '<li class="list_col resources_apidescription_col">'+
                             '<div class="list_col_content">'+ endpointUrl + '</div>'+
                         '</li>'+
                         '<li class="list_col last_list_col resources_apiprovider_col">'+
                             '<div class="list_col_content">'+
                                 '<span class="prime">' + API.provider + '</span>'+
                             '</div>'+
                         '</li>'+
                     '</ul>'+
                '</li>';
         
            	}
        	}
        	
        	$("#apiSection").html($("#apiSection").html()+tableBodyHTML);

        },
        function (jqXHR, textStatus, errorThrown) {
        	jagg.message({
                content: 'Error occurred while reading API information',
                type: 'error',
                id:'uniqueId1'
            });
        });
    }
   
    function syncKeys(){
    	getSavedKeys(true);
    }

    $(document).ready(function(){
    	loadKeyNameMappings();
    	getAppOnwer();
    });
    
    function showKeysByRole(parsedResult){
   	 jagg.post("../blocks/application/users/get/ajax/list.jag", {
            action:"isDevOp",
            applicationKey:$("#applicationKey").val(),
            userName:$("#userName").val()
        },
        function (result) {
       	 var keyTableBodyHTML = "";
       	 
       	 for(var i=0; i < parsedResult.length;i++){
   			var valuePair = parsedResult[i];
   			var name = valuePair.name;
   			var value = valuePair.value;

   		     if(result == "false" &&  name.indexOf("sandbox") !== -1){
   		    	 keyTableBodyHTML +='<li class="list_row_item  ">'+
   	               '<ul class="list_row  ">'+
   	                   '<li class="list_col first_list_col resources_apikey_col">'+
   	                       '<div class="list_col_content">'+
   	                           '<span class="prime">' + keyMappins[name] + '</span>'+
   	                       '</div>'+
   	                   '</li>'+
   	                   ' <li class="list_col resources_apivalue_col">'+
   	                       '<div class="list_col_content">'+
   	                           '<span class="prime">' + value + '</span>'+
   	                       '</div>'+
   	                   '</li>'+
   	               '</ul>'+
   	             '</li>';
   		     } else if(result == "true"){
                            keyTableBodyHTML +='<li class="list_row_item  ">'+
                          '<ul class="list_row  ">'+
                              '<li class="list_col first_list_col resources_apikey_col">'+
                                  '<div class="list_col_content">'+
                                      '<span class="prime">' + keyMappins[name] + '</span>'+
                                  '</div>'+
                              '</li>'+
                              ' <li class="list_col resources_apivalue_col">'+
                                  '<div class="list_col_content">'+
                                      '<span class="prime">' + value + '</span>'+
                                  '</div>'+
                              '</li>'+
                          '</ul>'+
                        '</li>';
                        }

       	 }
            $("#keySection").append(keyTableBodyHTML);	 
        },
        function (jqXHR, textStatus, errorThrown) {
        	$("#keySection").hide(); 
        	jagg.message({
                content: 'Error occurred while displaying Keys relevant to the user',
                type: 'error',
                id:'uniqueId1'
            });
        });
    }
    
    function getKeysFromRegistry() {
    	$("#keySection").html('<span class="icon-spinner icon-spin icon-large"></span>');
        jagg.post("../blocks/apimanager/get/ajax/get.jag", {
            action:"getKeysFromRegistry",
            applicationKey:$("#applicationKey").val(),
        },
        function (result) {
    		var parsedResult = jQuery.parseJSON(result);

    		var keyTableBodyHTML = '<li class="list_row_item first_list_row_item">'
						            +'<ul class="list_row first_list_row">'
						                +'<li class="list_col first_list_col resources_apikey_col">'
						                   +'<h2 class="list_col_heading">Key</h2>'
						                +'</li>'
						                +'<li class="list_col resources_apivalue_col">'
						                    +'<h2 class="list_col_heading">Value</h2>'
						               +'</li>'
						           + '</ul>'
						        + '</li>';

    		$("#keySection").empty(); 
    		$("#keySection").append(keyTableBodyHTML);   		
    		
    		var keysAvailable = true;
    		 for(var i=0; i < parsedResult.length;i++){
    				var valuePair = parsedResult[i];
    				var name = valuePair.name;
    				var value = valuePair.value;
    				if(value == ""){
    					keysAvailable = false;
    					break;
    				}
    		 }
    		 
    		 if(keysAvailable){
    			 showKeysByRole(parsedResult);
    		 }

        },
        function (jqXHR, textStatus, errorThrown) {
        	$("#keySection").hide(); 
        	jagg.message({
                content: 'Error occurred while reading Keys from registry',
                type: 'error',
                id:'uniqueId1'
            });
        });
    }
    
    function drawAPIsTable() {
    	//$("#apiSection").append('<span class="icon-spinner icon-spin icon-large"></span>');
        jagg.post("../blocks/apimanager/get/ajax/get.jag", {
            action: "getApplicationAPI",
            applicationKey: $("#applicationKey").val()
        }, function (result) {
        
            var parsedResult,
                APIList = [],
                APICount = 0;

            if (result !== undefined) {
                parsedResult=jQuery.parseJSON(result);
                APIList = parsedResult.apiInfo;
                APICount = APIList.length;
            }
            
            if(APICount == 0){
	            $("#renewApiBtn").attr("disabled", "disabled");  
	            $("#apiSection").html("<div class='noData-message'>APIs have not been subscribed to yet.</div>");
            }
            
            var tableBodyHTML = '<li class="list_row_item first_list_row_item">'
				+'<ul class="list_row first_list_row">'
					+'<li class="list_col first_list_col resources_apiname_col">'
						+'<h2 class="list_col_heading">Name & Version</h2>'   
					+'</li>'
	                +'<li class="list_col resources_apidescription_col">'
	                	+'<h2 class="list_col_heading">Description</h2>'   
	                +'</li>'
	                +'<li class="list_col last_list_col resources_apiprovider_col">'
	                	+'<h2 class="list_col_heading">Provider</h2>'    
	                +'</li>'
	              +'</ul>'
             +'</li>';
           
            initKeys(APICount,APIList);

            for (var i = (APICount - 1); i >= 0; i--) {
                var API = APIList[i];
                tableBodyHTML +='<li class="list_row_item  ">'+
                            '<ul class="list_row  ">'+
                                '<li class="list_col first_list_col resources_apiname_col">'+
                                    '<div class="list_col_content">'+
                                        '<ul class="list">'+
                                            '<li><a href="#">' + API.name + '</a></li>'+
                                            '<li class="small">' + API.version + '</li>'+
                                        '</ul>'+
                                    '</div>'+
                                '</li>'+
                                '<li class="list_col resources_apidescription_col">'+
                                    '<div class="list_col_content" id="'+ API.name +'"></div>'+
                                '</li>'+
                                '<li class="list_col last_list_col resources_apiprovider_col">'+
                                    '<div class="list_col_content">'+
                                        '<span class="prime">' + API.provider + '</span>'+
                                    '</div>'+
                                '</li>'+
                            '</ul>'+
                       '</li>';
                addDescription(API.name, API.version, API.provider);
            }
            $("#apiSection").html($("#apiSection").html()+tableBodyHTML);
            
        }, function (jqXHR, textStatus, errorThrown) {
            $("#renewApiBtn").attr("disabled", "disabled");
        	jagg.message({
                  content: 'Error occurred while reading API information',
                  type: 'error',
                  id:'uniqueId1'
              });
        });

    }
    
    function initKeys(APICount,APIList){
        var keysAvailable = true;
        for (var i = (APICount - 1); i >= 0; i--) {
            var API = APIList[i];
            if (API.keys.length == 0){
            	keysAvailable = false;
            	break;
            }
        } 
        
        if(keysAvailable){
        	getSavedKeys(false); 
        }else{
        	generateKeys(API.name, API.version, API.provider);
        }
    }
    
    function addDescription(apiName, apiVersion, apiProvider){
    	jagg.post("../blocks/apimanager/get/ajax/get.jag", {
        action:"getAPI",
    	apiName:apiName,
    	apiVersion:apiVersion,
    	apiProvider:apiProvider
    	},
    	 function (result) {
            var parsedResult = jQuery.parseJSON(result);      
            var apiInfo = parsedResult.apiInfo;
            var description = apiInfo[0].context;
            $('#'+apiName).text(description);    
        },
        function (jqXHR, textStatus, errorThrown) {
        });
    }
</script>

<style type="text/css">
    .span9 label{
     font-size:12px;
    }
</style>

   <div class="container">
				<article class="main">
				   
                        <header><div> <% jagg.includeBlock("page/messages", null); %></div>
                        	<div class="content">
                                <h1>Resources</h1>
                             </div>
                        </header>
                        <% jagg.includeBlock("resources/menu", {page:'apis',applicationName:applicationName,applicationKey:applicationKey}); %>
                        <section class="separator">
                            <div class="page_nav">
                                <div class="content clear">
                                    <ol class="breadcrumb left">
                                            <li class="breadcrumb_item"><h2>APIs</h2></li>
                                    </ol>
                                    <div class="right btn_list_box">
                                        <ul class="inline_box inline_list btn_list" id="gotoApiManagerbtnContainer">
                                            <li class="inline_item" id="btnItem"></li>
                                        </ul>
                                        <div class="clearfix"></div>
                                     </div>


                                </div>
                            </div>
                            <div class="content clear well">
								<h2 class="mini no_margin">Saved Keys</h2>
                                <ul class="list_table push_top_20" id="keySection">
                                </ul>
                                <div id="renewbtnContainer"></div>
								<h2 class="mini">Subscribed APIs</h2>
								 <ul class="list_table push_top_20" id="apiSection">
			                     </ul>
                            </div>
                        </section>
                        <div class="clearfix"></div>
                 </article>
            </div>
<% }); %>