<% jagg.template("application/add", function(inputs, outputs, jagg) { %>

<script type="text/javascript">

    var MAX_APP_KEY_LENGTH = 20;
    var validated = true ;
    
    function validateDuplicateApplicationKey(key) {
		var isKeyValid = validateApplicationKeyContent();
		if(isKeyValid){
        	jagg.syncPost("../blocks/application/add/ajax/add.jag", {
    				action:"isApplicationKeyAvailable",
    				applicationKey:key
    		}, function (result) {
				if(result.isAvailable=="true"){
					isKeyValid = true;
				}else{
					isKeyValid = false;
					validated = validated && false; 
					jagg.message({type:'error',content:'Invalid Application Key - Create a key which is not duplicated', id:'appcreationerrormsg'});
				}
			}, function (jqXHR, textStatus, errorThrown) {
				jagg.message({
					content:'Error while checking the availability of the application key',
					type:'error', id:'appcreationerrormsg'
				});
				isKeyValid = false;
    		});
		}  

		return isKeyValid;
    }
    
    function validateDuplicateApplicationKeyInAsync() {
        validated = validateApplicationKeyContent();
	 if(validated){
        	jagg.post("../blocks/application/add/ajax/add.jag", {
				action:"isApplicationKeyAvailable",
				applicationKey:$("#applicationKey").attr('value')
			}, function (result) {
 				var status=jQuery.parseJSON(result);
				if(status.isAvailable=="true"){
					validated=true;
				}else{
					validated = false;
					jagg.message({type:'error',content:'Invalid Application Key - Create a key which is not duplicated', id:'appcreationerrormsg'});
				}
    		}, function (jqXHR, textStatus, errorThrown) {
				jagg.message({
					content:'Error while checking the availability of the application key',
					type:'error', id:'appcreationerrormsg'
				});
			});
		} else {
			validated = false;
		}
    }

	function generateApplicationKey() {
		var genKey = Math.floor(Math.random()*1000);
		document.createAppForm.applicationKey.value = (document.createAppForm.applicationName.value).replace(/ /g,"").toLowerCase() + genKey;
	}

    function getFileExtension(filename) {
        var parts = filename.split('.');
        return parts[parts.length - 1];
    }

    function validateIconImage(filename, fileSize) {

        var ext = getFileExtension(filename);
        var maxSize = 5242880;
        var status1 = false;
        var status2 = false;

        // Check extension
        switch (ext.toLowerCase()) {
            case 'jpg':
            case 'jpeg':
            case 'gif':
            case 'bmp':
            case 'png':
                status1 = true;
        }

        // Check size
        if (fileSize != undefined && fileSize > 5242880) {
            status2 = false;
        }
        else {
            status2 = true;
        }

        // Set status
        if (status1 == true && status2 == true) {
            $('#iconInvalidMsg').hide();
            validated = validated && true;
        }
        else {
        	jagg.message({
                content: "Invalid image selected for Application Icon - Select a valid image",
                type: 'error', id:'appcreationerrormsg'
            });
            validated = validated && false;
        }
    }
    
    function validateApplicationKeyLength(){
	var appKeyLength = ($("#applicationKey").val()).length;
    	if (appKeyLength >= MAX_APP_KEY_LENGTH){
    		jagg.message({
                	content: "Invalid Application Key - Create a key which is less than "+MAX_APP_KEY_LENGTH+" characters",
                	type: 'error', id:'appcreationerrormsg'
            });
			validated = validated && false ;
    	}
    }
    
    function validateApplicationKeyAlphaNumeric(){
		var isKeyValid=true;
    	var keyValue = $("#applicationKey").val();

        var patternForSpace = / /g;
        var isSpace = patternForSpace.test(keyValue);

        var patternForNonAlphaNumericChars = /[^\w\s]/gi;
        var isInvalidChar = patternForNonAlphaNumericChars.test(keyValue);
        
        var patternForUnderscore = /_/g;
        var isUnderScore = patternForUnderscore.test(keyValue);

        if (isSpace == true || isInvalidChar == true || isUnderScore == true) {
        	jagg.message({
                content: "Invalid Application Key - Create a key which has only alphanumeric characters", id:'appcreationerrormsg',
                type: 'error', id:'appcreationerrormsg'
            });
        	validated = validated && false;
			isKeyValid = false;
        } else {
        	$('#applicationKey').val(keyValue);
			isKeyValid = true;
        }
		return isKeyValid;
    }
    
    function validateApplicationKeyContent(){
		jagg.removeMessage('appcreationerrormsg');
		var isKeyValid = true;
    	var appKeyLength = ($("#applicationKey").val()).length;
		if (appKeyLength == 0){
			jagg.message({
				content: "Invalid Application Key - Create a key which is not empty",
				type: 'error', id:'appcreationerrormsg'
			});
	    	validated = validated && false;
			isKeyValid = false;
		} else if(!isNaN($("#applicationKey").val())){
			jagg.message({
				content: "Invalid Application Key - Create a key which has does not have only numeric characters",
				type: 'error', id:'appcreationerrormsg'
			});
	    	validated = validated && false;
	    	isKeyValid = false;
	    } else {
	    	isKeyValid = validateApplicationKeyAlphaNumeric();
	    }
		return isKeyValid;
    }
    
    function validateApplicationName() {
	    var appNameLength = ($("#applicationName").val()).length;
	    var isNameValid=true;
	    if(appNameLength == 0){
		    jagg.message({
			    content: "Invalid Application Name - Create a Name which is not empty",
			    type: 'error', id:'appcreationerrormsg'
		    });
    	  //  validated = validated && false;
		    isNameValid = false;		
	    } else if (appNameLength > 200) {
		    jagg.message({
			    content: "Invalid Application Name - Too Lengthy",
			    type: 'error', id:'appcreationerrormsg'
		    });
    	   // validated = validated && false;
		    isNameValid = false;
	    }
	    return isNameValid;
    }
    
    var ie = (function(){
        var undef, v = 3, div = document.createElement('div');

        while (
            div.innerHTML = '<!--[if gt IE '+(++v)+']><i></i><![endif]-->',
            div.getElementsByTagName('i')[0]
        );

        return v> 4 ? v : undef;
    }());
    $(document).ready(function($){
    	// function get trigger when clear button clicked.
    	getSubscriptions();
    	$("#clear").click(function(e){
            $('#iconContainer').html('<input id="icon" type="file" name="appIcon" value="Browse..." />');
        });

    	var submitbutton 	= $("#SubmitButton");
    	var createForm 	= $("#createAppForm");
    	
    	$(createForm).ajaxForm({
    		beforeSubmit: function() { //before sending form		
    			validated = true ;
    			  			
    			validateApplicationKeyLength();
    			if(!validated){
    				return false;
    			}
    			
    			/*validateApplicationKeyContent();
    			if(!validated){
    				return false;
    			}*/
    			
    			validated = validateDuplicateApplicationKey($("#applicationKey").attr('value'));
    			if(!validated){
    				return false;
    			}
    			
    			validated = validateApplicationName();
    			if(!validated){
    				return false;
    			}
    			
                var file = $('#icon');
                if(file.val()!=""){
                    if(ie == undefined || ie > 9){
                	    validateIconImage(file.val(), file[0].files[0].size);
                    }
                }
    			if(!validated){
    				return false;
    			}
    			//$("#appcreation").attr('disabled','disabled');
			},
			uploadProgress: function(event, position, total, percentComplete) { //on progress
				$('#appcreation').attr('disabled','disabled');
			}, complete: function(result) { // on complete
				
				var resp =result.responseText ;
				var response = jQuery.parseJSON(resp);
				
				if(response != undefined) {
					var repositoryPath = response.toString();

					if(response.result==1.0){
						window.location.replace("index.jag");
					}else if(response.result==0.0){
						//$("#appcreation").attr('disabled', false);
					}
				}
				$('#appcreation').removeAttr('disabled');				
			}
	    });

	    $('#applicationName').keyup(function(event) {
            var msg = $(this).val();
	    	if (msg.length > $("#applicationName").attr('maxlength')){
				msg = msg.substring(0, $("#applicationKey").attr('maxlength'));
	    	}

            msg = msg.replace(/[^a-zA-Z0-9]+/g,'');
            msg = msg.toLowerCase();
            var appKeyLength = ($("#applicationKey").val()).length;
            if (msg.length >= MAX_APP_KEY_LENGTH){
				$("#applicationKey").val(msg.substring(0, $("#applicationKey").attr('maxlength')));
			} else {
               	$('#applicationKey').val(msg);
		    }	
        });

	    $('#applicationName').focusout(function(event) {
	    	var originalAppKey = $("#applicationKey").attr('value');
		var appkey=originalAppKey;
	    	while(!validateDuplicateApplicationKey(appkey)){
	    		if(!isNaN(appkey)){
				break;
			}
	
		    	var number = 1 + Math.floor(Math.random() * 10000000);
			var len = number.toString().length;
				
			var diff = parseInt($("#applicationKey").attr('maxlength')) - appkey.length;
			if(diff>=len){
				appkey = originalAppKey + number;
			} else {
				appkey = appkey.substring(0, appkey.length+(diff-len)) + number ;	
			}				    		
	    	}
		$('#applicationKey').val(appkey);
	    });

	    $('#applicationKey').focusout(function(event) {
	    	if ($(this).val() != undefined && $(this).val().length) { 
        	    validateDuplicateApplicationKeyInAsync();
	    	}
        });
	    
        $('#applicationKey').keyup(function(event) {  
        	var keyValue = $(this).val();

		if(keyValue.length > $("#applicationKey").attr('maxlength')){
			keyValue = keyValue.substring(0, $("#applicationKey").attr('maxlength'));
		} 

        	keyValue = keyValue.toLowerCase();
        	$('#applicationKey').val(keyValue);
        });

        // Validate Icon
        $("#icon").change(function () {
            var file = $('#icon');
            validateIconImage(file.val(), this.files[0].size);
        });

    });

    function getSubscriptions() {
        var userName = $("#userName").attr('value');
        var domain = userName.split("@")[1];

         jagg.post("../blocks/application/get/ajax/list.jag", {
                        action:"getSubscriptions",
                        domainName:domain
                  },
                  function (result) {
                        var subscriptions = jQuery.parseJSON(result);
                        var aPaaS = subscriptions.aPaaS;
                        var iPaaS = subscriptions.iPaaS;

                        document.getElementById("aPaaS").value = aPaaS;
                        document.getElementById("iPaaS").value = iPaaS;

 $('#applicationType option').each(function(){
                            if(aPaaS == "false") {
                                if( $(this).attr('availableSub')== "aPaaS"){
                                    $(this).remove() ;
                                }
                            }
                            if(iPaaS == "false") {
                                if( $(this).attr('availableSub')== "iPaaS"){
                                    $(this).remove() ;
                                }
                            }
                            
                        });

$('#applicationType').addClass('select_list').select2();
                  },
                  function (jqXHR, textStatus, errorThrown) {
                      jagg.message({content:'Could not retrieve organization subscription info.',type:'error', cbk:function(){
                      }
                  });
                  });
    }
   
</script>



<div class="container">
    <article class="main">
        <% jagg.includeBlock("page/messages", null); %>
        <header class="separator">
            <div class="content">
                    <ol class="breadcrumb">
                            <li class="breadcrumb_item"><a class="breadcrumb_link" href="<%=jagg.getAbsoluteUrl("/site/pages/index.jag")%>">Home</a></li>
                            <li class="breadcrumb_item"><h1>Add New Application</h1></li>
                    </ol>
            </div>
        </header>
        <section class="content push_top_40">

            <div class="form-container">
                <form class="right_label hold" enctype="multipart/form-data" method='post' action='<%=jagg.getAbsoluteUrl("/site/blocks/application/add/ajax/add.jag")%>' name="createAppForm" id="createAppForm">
                <input type="hidden" name="action" value="createNewApplication" />
                  <fieldset>
                        <div class="input_row">
                            <label for="applicationName" ><strong>Name</strong> <em>*</em></label>
                            <input  type='text' id='applicationName' name="applicationName" placeholder="Application Name" class="half required" maxlength="40"/>
                            
                        </div>
                        <div class="input_row">
                            <label for="applicationKey" ><strong>Key</strong> <em>*</em></label>
                            <input  type='text' maxlength="19" id='applicationKey' name="applicationKey" placeholder="Application Key" class="half required"/>
                            

                            <p class="note"><strong>Application key is a unique identifier</strong>. This has to be unique across all applications. An auto generated key is provided by default. You can also provide your own key.</p>
                        </div>
                        <div class="input_row">
                            <label for="icon" >Icon</label>
                            <span id="iconContainer"><input id="icon" type="file" name="appIcon" value="Browse..." /></span>
                            <a href="#" onclick="" id='clear' class="link-style">Clear</a>
                            <label class="error" id="iconInvalidMsg" style="display:none">Invalid Image.</label>

                            <p class="note">You can only upload images in <strong>jpg</strong>, <strong>jpeg</strong>, <strong>gif</strong>, <strong>bmp</strong> and <strong>png</strong> formats. Maximum file size is 5mb.</p>
                        </div>
                        <div class="input_row">
                            <label for="applicationDescription" >Description</label>
                            <textarea name='applicationDescription' id='applicationDescription' rows="5" cols="10" class="full" maxlength="250"></textarea>
                        </div>
                        <div class="input_row">
                            <label for="application_type"><strong>Application Type</strong> <em>*</em></label>
                             <%
                                var applicationTypes=getProperties("ApplicationType");
                                var mainHTML="";
                                var supportiveHTML="";

                                if(applicationTypes===null || applicationTypes===undefined || applicationTypes.length===0){

                                    mainHTML='<span style="color:#ff0000">"Application Types" are not defined!</span>';
                                    //supportiveHTML='<span style="color:#ff0000">"Application Types" are not defined!</span>';

                                }else{

                                    mainHTML='<select id="applicationType" name="applicationType">';

                                    var applicationTypesCount=applicationTypes.length;

                                    for(var i=0 ; i < applicationTypesCount ; i++ ) {
                                        var SubscriptionAvailability = getProperty("ApplicationType."+applicationTypes[i]+".Property.SubscriptionAvailability");

                                        var displayName=getProperty("ApplicationType."+applicationTypes[i]+".Property.DisplayName");
                                        var description=getProperty("ApplicationType."+applicationTypes[i]+".Property.Description");
                                        var enabled = getProperty("ApplicationType."+applicationTypes[i]+".Property.Enable");
                                        var comment = getProperty("ApplicationType."+applicationTypes[i]+".Property.Comment");
                                        var applicationType=applicationTypes[i];

                                        if(comment){
                                            mainHTML+='<option availableSub="'+SubscriptionAvailability+'" value="'+applicationType +'"'+ enabled +'>'+displayName +" "+ comment + '</option>';
                                        }else{
                                            mainHTML+='<option availableSub="'+SubscriptionAvailability+'"value="'+applicationType +'"'+ enabled +'>'+displayName+'</option>';
                                        }
                                        supportiveHTML+='<li>'+applicationType+':'+description+'</li>';
                                    }

                                    mainHTML+='</select>';
                                }
                                %>
                                <%=mainHTML%>

    <p class="note">Select the type of application archive.</p>
 </div>
<div class="input_row">
    <label for="repository_type" ><strong>Repository Type </strong><em>*</em></label>
    <%
    var repositoryProviders=getProperties("RepositoryProviderConfig");
    if(repositoryProviders==null || repositoryProviders.length==0){
        print('<span style="color:#ff0000">"Repository Providers" are not defined!</span>');
    }else{
        print('<select id="repositoryType" name="repositoryType" class="select_list">');
        var repoProviderCount=repositoryProviders.length;
        for(var i=0 ; i < repoProviderCount ; i++){
            var displayName=getProperty("RepositoryProviderConfig."+repositoryProviders[i]+".Property.DisplayName");
            var repositoryProvider=getProperty("RepositoryProviderConfig."+repositoryProviders[i]+".Property.Provider");
            print('<option value="'+repositoryProvider+'">'+displayName+'</option>');
        }
        print('</select>');
    }
    %>
    <p class="note">Select a version control system.</p>
</div>

</fieldset>

<div class="buttonrow">
<input type="submit" value="Create Application" class="btn main" id='appcreation' />
<a href="#" onclick="location.href='index.jag?'" >Cancel</a>
</div>
<input type="hidden" name="userName"  id="userName" value='<%= session.get("LOGGED_IN_USER") %>'/>
<input type="hidden" name="aPaaS" id="aPaaS" value='false'/>
<input type="hidden" name="iPaaS" id="iPaaS" value='false'/>

</form>
</div><!-- /form-container -->

<div class="clearfix"></div>
</section>
<div class="clearfix"></div>
</article>
</div><!-- /container -->
<% }); %>
