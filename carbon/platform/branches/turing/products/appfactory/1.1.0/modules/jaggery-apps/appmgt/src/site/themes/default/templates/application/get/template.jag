<% include("/jagg/constants.jag"); %>
<% jagg.template("application/get", function(inputs, outputs, jagg) { %>

<%
    var log = new Log();
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
    var hasConfigureAPIManagerPermission= outputs.hasConfigureAPIManagerPermission;
    %>
<script type="text/javascript" charset="utf-8">

    //this is for zeroclipboard pluging
    var _defaults = {
      moviePath:         "<%=jagg.getAbsoluteUrl(jagg.getThemeFile('assets/js/vendor/ZeroClipboard/ZeroClipboard.swf'))%>",        // URL to movie
      trustedDomains:    undefined,                  // Domains that we should trust (single string or array of strings)
      hoverClass:        "zeroclipboard-is-hover",   // The class used to hover over the object
      activeClass:       "zeroclipboard-is-active",  // The class used to set object active
      allowScriptAccess: "sameDomain",               // SWF outbound scripting policy
      useNoCache:        true,                       // Include a nocache query parameter on requests for the SWF
      amdModuleId:       null                       // AMD module ID or path to access the ZeroClipboard object
    };
    ZeroClipboard.setDefaults(_defaults);

    var processIndicatorHTML='<img src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile("images/processing.gif"))%>" id="processIndicator" style="width:22px;height:22px;"/>';
    var issuesSummaryJSON = {};
    var descriptionInfo="";//declared to hold the application description
    var loggedinUser='';
    var appOwnerName='';
    var allResourceCount = [];
//[cdata[
$(document).ready(function(){
	//updateIssueTracker("<%=applicationKey%>");

    loadApplicationInfo();
    loadAppUsersWithRoles();
    loadDatasourceInfo();
    loadAPIsInfo();
    loadDependanciesInfo();
    loadRssDatabasesInfo();
    createCurrentStatus();
    loggedinUser=$('#userName').val();
    if(loggedinUser!=appOwnerName){
        $('#editFieldNotification').html('');
    }else{
        $('#description').each(function(){
            $(this).qtip(
               {
                   content: {
                               text: $(this).attr('data-value')
                            },
                   show: {
                       when: 'click',
                       solo: true // Only show one tooltip at a time
                   },
                   hide: 'unfocus',
                   style: {
                                  classes: 'popup_status_box tooltip',
                                  widget: false,
                                  def: false
                              }
               });
        });
    }

    $('#repositories_and_builds_list_content').css('height','70px');
    $('#commentsAnchor').click(function(){
	   $('html, body').animate({
	       scrollTop: $( $(this).attr('href') ).offset().top
	   }, 500);
	   return false;
	});

    $('#appDescriptionEditBtn').click(
		function(){
	        $('#description').hide();
	        $('#appDescriptionEdit').show();
		}
	);
	$('#description').click(
		function(){

            if(loggedinUser===appOwnerName){
                $('#description').hide();
                $('#appDescriptionEdit_textarea').val(descriptionInfo); //descriptionInfo is an global variable that holds the application description
                $('#appDescriptionEdit').show();

            }
		}
	);


	$('#appDescriptionSaveBtn').click(
    	function(){
        	$('#description').show();
        	$('#appDescriptionEdit').hide();
    	}
	);

	$('#appDescriptionCancelBtn').click(
    	function(){
        	$('#description').show();
        	$('#appDescriptionEdit').hide();
    	}
	);
	/*var desc  = $('#description');
	if(desc.html() == ""){
		desc.html("<span class='editFieldNotification'>Click here to edit description</span>");
	} */



});



function toErrorHtml(message){
    var html="<span style=\"color:#D16666\">"+message+"</span>";
    return html;
}

function toInfoHtml(message){
    var html="<span style=\"color:#363636\">"+message+"</span>";
    return html;
}


function updateCalculatedETAValue(appKey,stage, version){
	var endDate ="" ;
	jagg.post("../blocks/eta/calculate/ajax/get.jag", {
        action:"calculate",
        applicationKey:'<%= applicationKey %>',
        version:version,
        stage:stage

    },function (result) {

    	var parsedObject = jQuery.parseJSON(result);
    	var v= version.replace(/\./g, '_') ;
    	$("#eta_"+appKey+"_"+v).text("");
    	if(!result.error && parsedObject.eta.endDate.length != 0){
    		$("#eta_"+appKey+"_"+v).text(parsedObject.eta.endDate);
    	}
    },function (jqXHR, textStatus, errorThrown) {
        //jagg.message({content:'Could not launch the application',type:'error' });
    	//alert('Could not launch the application');
    });
}


function launchApp(applicationKey, version,stage,state,type){

    jagg.post("../blocks/application/get/ajax/list.jag", {
                action: "getMetaDataForAppVersion",
                applicationKey: applicationKey,
                version: version,
                stage: stage,
                state: state,
                type: type
            }, function (result) {
                //drawVersionsList();
                var resJSON;
                var msg = "";
                resJSON = jQuery.parseJSON(result);
                var URL="";
                if(type==='bpel' || type==='dbs')	// if app type is either 'bpel' or 'dbs' then take only accessURLMD
                	URL = resJSON.accessURLMD; 	
                else	// for other types append baseURLMD and accessURLMD
                	URL=resJSON.baseURLMD + resJSON.accessURLMD;
                if(URL===""){
                    jagg.message({
                        content: "Application is not deployed yet.!",
                        type: 'error'
                    });

                }
                window.open(URL, '_blank')
            },
            function (jqXHR, textStatus, errorThrown) {
                jagg.message({
                    content: "Error occured while launching the artifact.!",
                    type: 'error'
                });

            });

}


function launchApp_old_function(stage,version,btn){

    jagg.post("../blocks/application/get/ajax/list.jag", {
        action:"getMetaDataForAppVersion",
        version:version,
        applicationKey:'<%=applicationKey%>',
        stage:stage,
        state:"started",
        type:""
    },function (res) {
    	var resJSON = jQuery.parseJSON(res);
    	var msg = "" ;
        var type= resJSON.type ;
    	if(resJSON.appStatusMD=='started'){

    		if(type=="war"){
    				window.open(resJSON.baseURLMD +  resJSON.accessURLMD,"_blank");
     
    		}else if(type=="jaxws"){
    				window.open(resJSON.baseURLMD +  resJSON.accessURLMD,"_blank");

            }else if(type=="jaxrs"){
    				window.open(resJSON.baseURLMD +  resJSON.accessURLMD,"_blank");

    		}else if(type=="car"){
    			var msg = 'Deployed Carbon Application contains these services.</br>' ;
            	for(var u in resJSON.accessURLMD){
            		var tmp = resJSON.baseURLMD + "services/t/" + applicationKey + "/"  + resJSON.accessURLMD[u]+ "?wsdl";
            		msg += resJSON.accessURLMD[u] + ' Service WSDL <a  target="_blank"  href="'+ tmp +'">Launch</a></br>' ;

                }
                jagg.message({content:msg,type:'error',id:'myuniqeid' });

            }else if(type=="bpel" || type=="dbs"){
                var msg = 'Deployed Carbon Application contains these services.</br>' ;
                for(var u in resJSON.accessURLMD){
                  var url= resJSON.accessURLMD[u];
                  var protocol=url.split("://")[0];
                  if(protocol=='https' || protocol=='http'){
                    var tmp =  resJSON.accessURLMD[u]+ "?wsdl";
                    msg += protocol + ' Service WSDL <a  target="_blank"  href="'+ tmp +'">Launch</a></br>' ;
                  }
                }
                jagg.message({content:msg,type:'error',id:'myuniqeid' });

            }else if(type=="jaggery"){
                window.open(resJSON.baseURLMD +  resJSON.accessURLMD,"_blank");

            }
        //end of "if(resJSON.appStatusMD=='started'){"
    	}else if(resJSON.appStatusMD=='stopped'){

    		msg += 'Application is already deployed but not in running state.' ;
    		msg += ' To get the application URL, click <a  target="_blank"  href="'+(resJSON.baseURLMD +  resJSON.accessURLMD)+'">here</a>' ;
            jagg.message({content:msg,type:'error',id:'myuniqeid' });

    	} else if(resJSON.appStatusMD=='faulty'){

    		msg += 'Deployment fail.' ;
            jagg.message({content:msg,type:'error',id:'myuniqeid' });

    	} else if(resJSON.appStatusMD=='serverfaulty'){

    		msg += 'Deployment server not respond.' ;
            jagg.message({content:msg,type:'error',id:'myuniqeid' });

    	}  else {

    		msg += 'Application is not deployed yet.' ;
            jagg.message({content:msg,type:'error',id:'myuniqeid' });

    	}
    },function (jqXHR, textStatus, errorThrown) {
        jagg.message({content:'Could not launch the application',type:'error',id:'myuniqeid' });
    });
}


function issuesSummary(appKey){

    jagg.syncPost("../blocks/issuetracker/list/ajax/list.jag", {
    	action:"getIssuesSummary",
    	applicationKey:appKey
    },function (result) {
    	issuesSummaryJSON = result ;
    },function (jqXHR, textStatus, errorThrown) {
	    $("#trackerStatus").text("Error occured while retrieving Issue Tracker information!");
	    $(".issuetracker").hide();
    });
}

function getIssueSummaryForVersion(version){
	for(var key in issuesSummaryJSON){
		if(issuesSummaryJSON[key].version === version){
			return issuesSummaryJSON[key] ;
		}
	}
	return { "bugCount":"0" ,"featureCount":"0","supportCount":"0","totalCount":"0" };
}

function updateIssueTracker(appKey){
    $("#trackerStatus").html(processIndicatorHTML);
    $(".issuetracker").hide();
    var issueSet={};

    jagg.post("../blocks/issuetracker/list/ajax/list.jag", {
    	action:"getIssueTrackerInfo",
    	applicationKey:appKey
    },function (result) {

        $("#trackerStatus").html("");
        issueSet= jQuery.parseJSON(result);

        $(".issuetracker-bug-open").text(issueSet.bug.open);
        $(".issuetracker-bug-inprogress").text(issueSet.bug.inProgress);
        $(".issuetracker-bug-total").text(issueSet.bug.total);

        $(".issuetracker-feature-open").text(issueSet.feature.open);
        $(".issuetracker-feature-inprogress").text(issueSet.feature.inProgress);
        $(".issuetracker-feature-total").text(issueSet.feature.total);

        $(".issuetracker-support-open").text(issueSet.support.open);
        $(".issuetracker-support-inprogress").text(issueSet.support.inProgress);
        $(".issuetracker-support-total").text(issueSet.support.total);

        $(".issuetracker").fadeIn();

    },function (jqXHR, textStatus, errorThrown) {
	    $("#trackerStatus").text("Error occured while retrieving Issue Tracker information!");
	    $(".issuetracker").hide();
    });
}




function loadApplicationInfo(){
    jagg.post("../blocks/application/get/ajax/list.jag", {
	    action:"getAppInfo",
	    applicationKey:'<%=applicationKey%>'
	},function (result) {

	    var parsedArray = jQuery.parseJSON(result);
	    $('#apptype').html(parsedArray.typeDisplayName);
	    $('#repotype').html(parsedArray.repositoryTypeDisplayName);
	    if(parsedArray.description!="null" && parsedArray.description!=""){
            descriptionInfo=parsedArray.description;
	    	$('#description').html(descriptionInfo);
	    }else{
		  $('#description').html("<span class='editFieldNotification'></span>");
	    }

	    if(parsedArray.description!="null"){
	    	$('#appDescriptionEdit_textarea').val(parsedArray.description);
	    }

	},function (jqXHR, textStatus, errorThrown) {
	    //jagg.message({content:'Could not load Application information',type:'error' });
        jagg.message({content:'Could not load Application information',type:'error',id:'myuniqeid' });
	});
}
function loadRssDatabasesInfo(){
    var resourceCount=0;
    $("div#databases>table>tbody").html("");
    $("div#databases>span.info").html(processIndicatorHTML);
    $("div#databases>table").hide();
    jagg.post("../blocks/rssmanager/add/ajax/add.jag", {
        action:"getDatabases",
        applicationKey:$("#applicationKey").attr('value')
    },function (result) {
        $("div#databases>span.info").html("");
        $("div#databases>table>tbody").html("");
        var datapplicationabases=[];
        if (result != undefined) {
            databases = jQuery.parseJSON(result);

            if(databases.length>0){
                for (var index in databases) {
                    var database=databases[index];

                    var tableRow="<tr><td>"+database.name+"</td>\
                                <td>"+database.rssInstanceName+"</td>\
                                <td>"+database.url+"</td></tr>";
                    $("div#databases>table>tbody").append(tableRow);
                }
                $("div#databases>table").fadeIn();
                
            }else{
                $("div#datasources").hide();
                $("div#databases>span.info").html(toInfoHtml("No Databases found!"));
            }
        }
        resourceCount=databases.length;
        $("#dbCount").text(resourceCount);
        allResourceCount.push({type:'#dbCount',count: resourceCount});
        detectResourceExistance();
    },function (jqXHR, textStatus, errorThrown) {
        allResourceCount.push({type:'#dbCount',count: 0});
        detectResourceExistance();
        $("div#databases>span.info").html(toErrorHtml("Error occurred while loading Databases information!"));
    });

}

function loadDatasourceInfo(){
    var resourceCount=0;
    $("div#datasources>table>tbody").html("");
    $("div#datasources>span.info").html(processIndicatorHTML);
    $("div#datasources>table").hide();
    jagg.post("../blocks/datasource/get/ajax/list.jag", {
    	action:"getDatasources",
    	applicationKey:'<%=applicationKey%>'
    },function(result) {
        $("div#datasources>span.info").html("");
        var dbCount=0;
        if(result!=undefined){
            var stages = jQuery.parseJSON(result);
            for(var stage in stages){
                var stageValues=stages[stage];
                if(stageValues instanceof Array && stageValues.length>0){
                    for(var index in stageValues){
                        var dataSource=stageValues[index];
                        var tableRow="<tr><td>"+dataSource.name+"</td>\
                                <td>"+dataSource.description+"</td>\
                                <td>"+stage+"</td></tr>";
                        $("div#datasources>table>tbody").append(tableRow);
                        resourceCount++;
                    }
                }
            }
            if(resourceCount>0){
                $("div#datasources").show();
                $("div#datasources>table").fadeIn();
            }else{
                $("div#datasources>span.info").html(toInfoHtml("No Datasources found!"));
            }
        }else{
            $("div#datasources>span.info").html(toInfoHtml("No Datasources found!"));
        }
        $("#dsCount").text(resourceCount);
        allResourceCount.push({type:'#dsCount',count: resourceCount});
        detectResourceExistance();
    },function (jqXHR, textStatus, errorThrown) {
        allResourceCount.push({type:'#dsCount',count: 0});
        detectResourceExistance();
        $("div#datasources>span.info").html(toErrorHtml("Error occurred while loading Datasources information!"));
    });
}

function loadAPIsInfo(){
    var resourceCount=0;
    $("div#api>table>tbody").html("");
    $("div#api>span.info").html(processIndicatorHTML);
    $("div#api>table").hide();
    jagg.post("../blocks/apimanager/get/ajax/get.jag", {
    	action:"getApplicationAPI",
      	applicationKey:'<%=applicationKey%>'
  	},function (result) {
  	    $("div#api>span.info").html("");
        var APIs=[];
  	    if(result!=undefined){
  	        var apiInfoJson =jQuery.parseJSON(result);
      	    var APIs =apiInfoJson.apiInfo;
      	    if(APIs.length>0){
                for (var index in APIs) {
                    var API=APIs[index];
                    var tableRow="<tr><td>"+API.name+"</td>\
                                <td>"+API.version+"</td>\
                                <td>"+API.provider+"</td></tr>";
                        $("div#api>table>tbody").append(tableRow);
                }
                $("div#api").show();
                $("div#api>table").fadeIn();
            }else{
                $("div#api>span.info").html(toInfoHtml("No APIs found!"));
            }
      	}
      	resourceCount=APIs.length;
      	$("#apiCount").text(resourceCount);
      	allResourceCount.push({type:'#apiCount',count: resourceCount});
      	detectResourceExistance();
  	},function (jqXHR, textStatus, errorThrown) {
  	    allResourceCount.push({type:'#apiCount',count: 0});
     	detectResourceExistance();
        $("div#api>span.info").html(toErrorHtml("Error occurred while loading APIs information!"));
  	});

}

function loadDependanciesInfo(){
    var resourceCount=0;
    $("div#properties>table>tbody").html("");
    $("div#properties>span.info").html(processIndicatorHTML);
    $("div#properties>table").hide();
    jagg.post("../blocks/resources/get/ajax/get.jag", {
      action:"getAllDependencies",
      applicationKey:'<%=applicationKey%>'
    },function (result) {
        $("div#properties>span.info").html("");
        if(result!=undefined){
            var parsedResult = jQuery.parseJSON(result);
            for(var stageKey in parsedResult){
                var innerObject=parsedResult[stageKey];
                var dependencyArray=innerObject.dependencies;
                if(dependencyArray.length>0){
                    for(var index in dependencyArray){
                        var property=dependencyArray[index];
                        var tableRow="<tr><td>"+property.name+"</td>\
                                <td>"+property.value+"</td>\
                                <td>"+property.description+"</td>\
                                <td>"+stageKey+"</td></tr>";
                        $("div#properties>table>tbody").append(tableRow);
                        resourceCount++;
                    }
                }
            }
            if(resourceCount>0){
                $("div#properties").show();
                $("div#properties>table").fadeIn();
            }else{
                $("div#properties>span.info").html(toInfoHtml("No endpoints found!"));
            }
        }else{
            $("div#properties>span.info").html(toInfoHtml("No endpoints found!"));
        }
        $("#propCount").text(resourceCount);
        allResourceCount.push({type:'#propCount',count: resourceCount});
        detectResourceExistance();
    },function (jqXHR, textStatus, errorThrown) {
        allResourceCount.push({type:'#propCount',count: 0});
        detectResourceExistance();
        $("div#properties>span.info").html(toErrorHtml("Error occurred while loading endpoints information!"));
    });

}

function detectResourceExistance(){    
    var noResources = true;
    for (var i=0;i<allResourceCount.length;i++)
    { 
      if (allResourceCount[i].count > 0){
        noResources = false; 
        break;
      }
    }
    if ( noResources==true){
        $("#resourceCountList").removeClass("blueFont");
        $("#resourceCountList").html('<li style="width:370px"><a href="<%=jagg.getAbsoluteUrl("/site/pages/configureenvironment.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>">Create Resources</a></li>');
    }else{
        $("#resourceCountList").html('<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/listDatasources.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="dsCount">0</span> Datasources</a></li>'+
                '<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/listdatabases.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="dbCount">0</span>  Databases</a></li>'+
                '<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/apimanager.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="apiCount">0</span> APIs</a></li>'+
                '<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/resources.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="propCount">0</span> Properties</a></li>');
        for(var i in allResourceCount){
            var tmpObj=allResourceCount[i];
            $(tmpObj.type).text(tmpObj.count);
        }
    }
}


function VersionComparator(a,b) {
    return b.version.localeCompare(a.version);
}
function createCurrentStatus(){
    jagg.post("../blocks/application/get/ajax/list.jag", {
		action:"getAppVersionsInStages",
		userName:$("#userName").attr('value'),
		applicationKey:'<%=applicationKey%>'
	},function (result) {
		$('#repositories_and_builds_list_content').css('height','auto');
	    $('#repositories_and_builds_list_content span.icon-spinner').remove();
	    
		var parsedArray = jQuery.parseJSON(result);

		var versions = Array();
		for (var i = 0; i < parsedArray.length; i++) {
			var application = parsedArray[i];
			versions = versions.concat(application.versions);
		}
		versions.sort(VersionComparator);



		issuesSummary("<%=applicationKey%>");

        $('#repositories_and_builds_list_content').append(
            $('<ul class="row in">'+
                  '<li class="col last_version">'+
                     ' <h2 style="border-bottom: none">Version</h2>'+
                   '</li>'+
                   '<li class="col last_life_cycle_state">'+
                   ' <h2 style="border-bottom: none">LifeCycle State</h2>'+
                   '</li>'+
                  '<li class="col last_dep">'+
                      '<h2  style="border-bottom: none">' + 'Completion Date' +
                      '</h2>'+
                   '</li>'+
                   '<li class="col last_build">'+
                   '<h2  style="border-bottom: none">Build Status</h2>'+
                   '</li>'+
                  '<li class="col dep_issues">'+
                      '<h2  style="border-bottom: none">Issues</h2>'+
                   '</li>'+
              '</ul>'));

        //Create the tool tip for ETA Header
        $('#repositories_and_builds_list_content .js_deta_tooltip').each(function(){
                $(this).qtip(
                   {
                       content: {
                                   attr: 'data-tooltip'
                                },
                       show: {
                           when: 'click',
                           solo: true // Only show one tooltip at a time
                       },
                       hide: 'unfocus',
                       style: {
                                      classes: 'popup_status_box tooltip',
                                      widget: false,
                                      def: false
                                  }
                   });
        });

        
		for (var j = 0; j < versions.length; j++) {
			var versionInfo = versions[j];
            var lasbuildinfo=versionInfo.lastBuildResult;
            var buildSplitted=lasbuildinfo.split(' ');
            var builResultStatus=buildSplitted[2];
			var buildStatus='';
			var success=new RegExp("\\bsuccess");
			if(success.test(builResultStatus)){
				buildStatus='<span class="status success "><strong>'+builResultStatus+'</strong></span>';
			}else if(lasbuildinfo.length>0){
                buildStatus='<span class="status failed "><strong>'+builResultStatus+'</strong></span>';

            }


			var repoCloneURL = versionInfo.repoURL;
			var repoBrowseURL = repoCloneURL;
			if( application.repositoryType == "git") {
				repoBrowseURL = repoCloneURL.replace("/git/", "/summary/");
			}
			var v = versionInfo.version.replace(/\./g, '_') ;
			var issueSummaryObj =  getIssueSummaryForVersion(versionInfo.version);
			updateCalculatedETAValue('<%=applicationKey%>',versionInfo.stage,versionInfo.version);
            var launchHide="";
            if(versionInfo.stage==="Retired"){
              launchHide="hidden";
            }

            var ul = $('<ul class="row js_accordion">'+
                        '<li class="col last_version">'+
                            '<p class="version">'+
                                '<a class="icon-chevron-right collapse_indicator"></a>'+
                                '<strong class="version_number overview_version">'+versionInfo.version+'</strong>'+
                            '</p>'+
                            '<p class="tag_link collapse">' +
                            
                            '<% if (outputs.hasRepoReadWritePermission) { %> <span style="margin-left: 1.5em;" >Copy URL</span> <a id ="copy' + j +  '" class="icon_link escape-event" title="Copy URL" style="cursor:default; margin-right:15px;" data-clipboard-text="'+repoCloneURL+'"> <span class="icon-copy"></span></a><% } %>'+
                             ' <span>Browse URL</span> <a href="'+repoBrowseURL+'" class="icon_link escape-event" target="_blank" title="Git browse URL"><span class="icon-globe " ></span></a></p>'+
                         '</li>'+
                         '<li class="col last_life_cycle_state">'+
                         '<p class="life_cycle_state quiet tag ">'+versionInfo.stage+'</p>'+
                         '</li>'+
                        '<li class="col last_dep">'+
                            '<p class="quiet"><time  id="eta_<%=applicationKey%>_'+v+'"></time></p>'+
                         '</li>'+
                         '<li class="col last_build">'+
                         '<p class="build_status">'+buildStatus+'</p>'+
                         '</li>'+
                        '<li class="col dep_issues">'+
                            '<p class="quiet">'+issueSummaryObj.totalCount+' Total</p>'+
                            '<div class="left collapse">'+
                                '<ul class="list small push_bottom blueFont">'+
                                    '<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/issuetracker.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>" class="escape-event">'+issueSummaryObj.bugCount +' Bugs</a></li>'+
                                    '<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/issuetracker.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>" class="escape-event">'+issueSummaryObj.featureCount+' Features</a></li>'+
                                    '<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/issuetracker.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>" class="escape-event">'+issueSummaryObj.supportCount+' Support</a></li>'+
                                '</ul>'+
                            '</div>'+
                            '<div class="right collapse '+ launchHide +'">'+
                                '<a href="#" onclick="launchApp(\'<%=applicationKey%>\',\''+versionInfo.version+'\',\''+versionInfo.stage+'\',\'started\',\'' + application.type + '\');" class="btn main small push_right_10 escape-event">Test</a>'+
                            '</div>'+
                            '<div class="clearfix"></div>'+
                         '</li>'+
                    '</ul>');

                console.info('registering events');
            	ul.click(function(event){
                    if($('.collapse_indicator',this).hasClass('icon-chevron-right')){
                        $('.collapse_indicator',this).removeClass('icon-chevron-right');
                        $('.collapse_indicator',this).addClass('icon-chevron-down');
                    }else{
                        $('.collapse_indicator',this).removeClass('icon-chevron-down');
                        $('.collapse_indicator',this).addClass('icon-chevron-right');
                    }
                    $('.collapse',this).toggle();

            	});
                $('a.escape-event',ul).click(function(e){
                    e.stopPropagation();
                });

            $('#repositories_and_builds_list_content').append(ul);
            $('#repositories_and_builds_list_content').append('<div class="clearfix"></div>');

            var clip = new ZeroClipboard($('#copy'+j));

            clip.on( 'load', function(client) {
                //alert( "movie is loaded" );
            });

            clip.on( 'complete', function(client, args) {
               // alert("Copied text to clipboard: " + args.text );
            } );
            clip.on( 'mousedown', function(client) {

            } );
            
            
		}
    },function (jqXHR, textStatus, errorThrown) {
	});
}

function loadAppUsersWithRoles(){
	$("#usercontent").html(processIndicatorHTML);
    jagg.post("../blocks/application/users/get/ajax/list.jag", {
    	action:"getAppUsersByRoles",
    	applicationKey:'<%=applicationKey%>'
    },function (result) {
        var roles = jQuery.parseJSON(result);
        var dom="";

        for(var roleKey in roles){
          if (roles.hasOwnProperty(roleKey)) {
            if(roleKey != "appOwner"){
                $('#userCountList').append($('<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>">'+roles[roleKey].users.length/2+" "+roles[roleKey].displayName+'</a></li>'));
            }else{
                $('#appOwner').html("<p title='"+roles[roleKey].users[0]+"'>"+roles[roleKey].users[1]+"</p>");
                appOwnerName=roles[roleKey].users[0];

    	    	if((loggedinUser == appOwnerName)&&(descriptionInfo.length==0)){
    	    		$('#description').html("<span class=''>Click here to edit description</span>");
    	    		$('#description').attr('title','Click here to edit the description');
    	    		$('#description').attr('class','property-value quiet');
    	    		$('#description').attr('style','min-height:3.0em;');
    	    	}
            }
          }
        }
        
        if ($("#userCountList li").length == 0){
            $("#userCountList").append('<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>">Add Team Members</a></li>');
        }
        
    },function (jqXHR, textStatus, errorThrown) {
        $('#userCountList').html("<span style=\"color:#D16666\">Error occured while retrieving User-role information!</span>");
    });
}


function updateDescription() {
    var newDescription = $('#appDescriptionEdit_textarea').val();
    $("#appDescriptionView").show();
    $('#description').show();
    $("#appDescriptionEdit").hide();
    jagg.post("../blocks/application/update/ajax/update.jag", {
        action:"updateDescription",
        applicationKey:'<%=applicationKey%>',
        newDescription:newDescription
    },function (result) {
    	descriptionInfo = newDescription ;
    	$('#description').html(newDescription);
    },function (jqXHR, textStatus, errorThrown) {
        //jagg.message({content:'Error occured while updating description!',type:'error' });
        jagg.message({content:'Error occured while updating description!',type:'error',id:'myuniqeid' });
    });

}



//]]
</script>
<style>
article.main section.separator-bottom{
    border-bottom: 1px solid #B0D1D8;
}
</style>
<input type="hidden" name="userName" id="userName" value="<%=userName%>"/>
<input type="hidden" name="applicationKey" id="applicationKey" value="<%=applicationKey%>"/>

<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('templates/application/get/js/get.js'))%>"></script>


<div class="container">
				<article class="main">
                    <% jagg.includeBlock("page/messages", null); %>
					<section class="separator separator-bottom">
						<div class="content clear well">
								<div class="left fw_430">
									<div class="left fw_215">
										<h2>Application Type</h2>
										<p id="apptype"></p>
									</div>
				 					<div class="left fw_215">

                                         <div id="appDescriptionView" class="property">
                                             <h2>Description</h2>
                                             <p id="description" class="property-value quiet" style="min-height:3.0em;"
                                                data-value="Click here to edit the description"></p>
                                         </div>
                                         <div id="appDescriptionEdit" class="property-value"
                                              style="display:none;overflow: hidden;">
                                             <form class="form-container">
                                                 <div class="input_row">
                                                     <textarea class="full" style="width:100%" id="appDescriptionEdit_textarea"></textarea>
                                                 </div>
                                                 <div class="row-fluid">
                                                    <div class="span6">
                                                         <input type="button" data-version="trunk" class="btn main small" value="Save" onclick="updateDescription()">
                                                           <span class="submit_note"> <a href="#" class="cancel" id="appDescriptionCancelBtn">Cancel</a></span>
                                                    </div>
                                                 </div>
                                             </form>
                                         </div>

									</div>
									<div class="clearfix"></div>
								</div>
								<div class="push_left_430">

								</div>
							<div class="clearfix"></div>
						</div>
					</section>
					<section class="separator separator-bottom">
						<div class="content clear well">
								<div class="left fw_430">
									<div class="left fw_215">
										<h2>Application Key</h2>
										<p><%=applicationKey%></p>
									</div>
									<div class="left fw_215">
										<h2>Repository Type</h2>
										<p id="repotype" ></p>
  									</div>
									<div class="clearfix"></div>
								</div>
								<div class="push_left_430">
									<h2>Owner</h2>
									<p id="appOwner"></p>
								</div>
							<div class="clearfix"></div>
						</div>
 					</section>


					<section id="repositories_and_builds_list"  class="separator current_status separator-bottom" >
                      <div class="content clear  well" id="repositories_and_builds_list_content">
					  			<h2 class="no_margin_top">Current Status</h2>
                                <span class="icon-spinner icon-spin icon-large"></span>
 					  </div>
  					</section>

					<section class="separator clear">
                      <div class="content well">
						  <div class="left users_cal fw_430">
						  	<h2>Team</h2>
							<ul class="list big push_bottom blueFont" id="userCountList">
							</ul>
						  </div>
						  <div class="left resources_cal">
						  	<h2>Resources</h2>
							<ul id="resourceCountList" class="list big push_bottom blueFont">
								<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/listDatasources.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="dsCount">0</span> Datasources</a></li>
								<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/listdatabases.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="dbCount">0</span>  Databases</a></li>
								<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/apimanager.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="apiCount">0</span> APIs</a></li>
								<li><a href="<%=jagg.getAbsoluteUrl("/site/pages/resources.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>"><span id="propCount">0</span> Properties</a></li>
							</ul>
						  </div>
					  <div class="clearfix"></div>
					</section>

				<div class="clearfix"></div>
				</article>
    <input type="hidden" name="userName"  id="userName" value='<%= session.get("LOGGED_IN_USER") %>'/>
				<!-- Todo - post 1.0 -->
				 <% //jagg.includeBlock("comment/comment-add", {"reference":"/repository/applications/"+ applicationKey +"/appinfo"}); %>
                 <% //jagg.includeBlock("comment/comment-list", {"reference":"/repository/applications/"+ applicationKey +"/appinfo"}); %>
            </div><!-- /container -->
        <script type="text/javascript">
            $(document).ready(function(){
                loggedinUser=$('#userName').val();
                console.info(loggedinUser, appOwnerName);
                if(loggedinUser==appOwnerName){
                        $('#description').qtip(
                           {
                               content: {
                                           text: $(this).attr('data-value')
                                        },
                               show: {
                                   when: 'click',
                                   solo: true // Only show one tooltip at a time
                               },
                               hide: 'unfocus',
                               style: {
                                              classes: 'popup_status_box tooltip',
                                              widget: false,
                                              def: false
                                          }
                           });
                }
             });

        </script>
<% }); %>
