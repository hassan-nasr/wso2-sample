#!/bin/bash

# Die on any error:
set -e
action=""
instance=""
instance_user=""
key=""
imagename=""
template=""
userrcfile=""
mysqlpass=""
software=""
source ./stratos-image.conf
function helpcreate {
    echo ""
    echo "    create: This action  will upload the cartridge template execution file into the remote virtual machine from"
    echo "            which you need to create the image, and execute it. At the end of the execution, image is ready for"
    echo "            upload"
    echo "    Usage for action create:"
    echo ""
    echo "    stratos-image -s <software> create <ip/hostname of the virtual machine> <image template> <instance user> <key>"
    echo ""
    echo "    -s : Softwared to be copied to the new image, separated by colon(:). Default is none. These will be"
    echo "         copied into the /opt folder of the instance"
    echo "    <ip/hostname of the virtual machine> : ip or hostname of the virtual machine using which image will be created from"
    echo "    <image template> : Template for the new image"
    echo "    <instance user> : User name of the instance from which you need to create the image"
    echo "    <key> : Private key of the user for logging into the instance. If not provided default key is used"
    echo ""
}

function helpupload {
    echo ""
    echo "    upload: Before executing the command with this action you need to execute the command with the create action."
    echo "            This action will log into openstack controller and upload the created image"
    echo "    Usage for action upload:"
    echo ""
    echo "    stratos-image upload <instance ip/hostname of the virtual machine> <image name> <userrcfile> <mysql root password>"
    echo ""
    echo "    <ip/hostname of the virtual machine> : ip or hostname of the virtual machine using which image will be created from"
    echo "    <image name> : When image is uploaded to the glance server it would appear with this name"
    echo "    <userrcfile> : The nova environment file which you need to copy to this folder. See README file in this folder"
    echo "    for further information"
    echo "    <mysql root password> : root password of the mysql database of the Openstack Controller."
    echo ""
}

function help {
    echo "    Mandatory parameter action with value create or upload should be provided"
    echo "        create : Log in to the remote virtual machine and create the image"
    echo "        upload : Upload the created image to the glance server"
    echo ""
    echo "    Mandatory and optional arguments depend on the action. Following is the list of usages for each action"
    echo "    Usage: stratos-image [optional arguments] <action> <mandatory arguments>"
    echo "    Action can be one of the following"
    echo ""
    helpcreate
    helpupload
    echo ""
}

function image_validate {

if [[ ( -z $action || ( -n $action && $action == "help" ) ) ]]; then
    help
    exit 1
fi

if [[ ( -z $action || ( -n $action && !( $action == "create" || $action == "upload" ) ) ) ]]; then
    help
    exit 1
fi

if [[ ( -n $action && $action == "create" && -z $instance ) ]]; then
    helpcreate
    exit 1
fi

if [[ ( -n $action && $action == "upload" && ( -z $instance || -z $imagename) ) ]]; then
    helpupload
    exit 1
fi

}

while getopts s: opts
do
  case $opts in
    s)
        software=${OPTARG}
        ;;
    *)
        help
        exit 1
        ;;
  esac
done
shift $((OPTIND-1))
action=$1

if [[ $action == "create" ]]; then
    instance=$2
    template=$3
    instance_user=$4
    key=$5
fi
if [[ $action == "upload" ]]; then
    instance=$2
    imagename=$3
    if [[ ! -z $4 ]]; then
        userrcfile=$4
    fi
    if [[ ! -z $5 ]]; then
        mysqlpass=$5
    fi
fi
image_validate

# Make sure the user is running as root.
if [ "$UID" -ne "0" ]; then
	echo ; echo "  You must be root to run $0.  (Try running 'sudo bash' first.)" ; echo 
	exit 69
fi


if [[ $action == "create" ]]; then

    echo "Install from template $template"
    pushd ./init_scripts/$template
    chmod 755 ./$template
    ./$template $instance $instance_user $key $software
    popd
    echo "Installed from template $template"

fi

if [[ $action == "upload" ]]; then
    scp -i $CONTROLLER_KEY ./uploadimg.sh $ADMIN@$CONTROLLER:
    scp -i $CONTROLLER_KEY ./$userrcfile $ADMIN@$CONTROLLER:
    ssh -i $CONTROLLER_KEY $ADMIN@$CONTROLLER "./uploadimg.sh $instance $imagename $userrcfile $mysqlpass"
    echo "$imagename is now available in Glance server($CONTROLLER)"
fi

echo "Done"

